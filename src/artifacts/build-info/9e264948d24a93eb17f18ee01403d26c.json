{
	"id": "9e264948d24a93eb17f18ee01403d26c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/SwapDeployer.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.0;\n\nimport \"./.deps/npm/@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"./interfaces/ISwap.sol\";\n\ncontract SwapDeployer is Ownable {\n    event NewSwapPool(\n        address indexed deployer,\n        address swapAddress,\n        IERC20[] pooledTokens\n    );\n    event NewClone(address indexed target, address cloneAddress);\n\n    constructor() public Ownable() {}\n\n    function clone(address target) external returns (address) {\n        address newClone = _clone(target);\n        emit NewClone(target, newClone);\n\n        return newClone;\n    }\n\n    function _clone(address target) internal returns (address) {\n        return Clones.clone(target);\n    }\n\n    function deploy(\n        address swapAddress,\n        IERC20[] memory _pooledTokens,\n        uint8[] memory decimals,\n        string memory lpTokenName,\n        string memory lpTokenSymbol,\n        uint256 _a,\n        uint256 _fee,\n        uint256 _adminFee,\n        address lpTokenTargetAddress\n    ) external returns (address) {\n        address swapClone = _clone(swapAddress);\n        ISwap(swapClone).initialize(\n            _pooledTokens,\n            decimals,\n            lpTokenName,\n            lpTokenSymbol,\n            _a,\n            _fee,\n            _adminFee,\n            lpTokenTargetAddress\n        );\n        Ownable(swapClone).transferOwnership(owner());\n        emit NewSwapPool(msg.sender, swapClone, _pooledTokens);\n        return swapClone;\n    }\n}"
			},
			"src/interfaces/ISwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity  >=0.6.0 <0.8.2;\n\n\nimport \"./IERC20.sol\";\n\ninterface ISwap {\n    // pool data view functions\n    function getA() external view returns (uint256);\n\n    function getToken(uint8 index) external view returns (IERC20);\n\n    function getTokenIndex(address tokenAddress) external view returns (uint8);\n\n    function getTokenBalances() external view returns (uint256[] memory);\n\n    function getTokenBalance(uint8 index) external view returns (uint256);\n\n    function getVirtualPrice() external view returns (uint256);\n\n    function getNumberOfTokens() external view returns (uint256);\n\n    function getLpToken() external view returns (IERC20);\n\n    // min return calculation functions\n    function calculateSwap(\n        uint8 tokenIndexFrom,\n        uint8 tokenIndexTo,\n        uint256 dx\n    ) external view returns (uint256);\n\n    function calculateTokenAmount(uint256[] calldata amounts, bool deposit)\n        external\n        view\n        returns (uint256);\n\n    function calculateRemoveLiquidity(uint256 amount)\n        external\n        view\n        returns (uint256[] memory);\n\n    function calculateRemoveLiquidityOneToken(\n        uint256 tokenAmount,\n        uint8 tokenIndex\n    ) external view returns (uint256 availableTokenAmount);\n\n    // state modifying functions\n    function initialize(\n        IERC20[] memory pooledTokens,\n        uint8[] memory decimals,\n        string memory lpTokenName,\n        string memory lpTokenSymbol,\n        uint256 a,\n        uint256 fee,\n        uint256 adminFee,\n        address lpTokenTargetAddress\n    ) external;\n\n    function swap(\n        uint8 tokenIndexFrom,\n        uint8 tokenIndexTo,\n        uint256 dx,\n        uint256 minDy,\n        uint256 deadline\n    ) external returns (uint256);\n\n    function addLiquidity(\n        uint256[] calldata amounts,\n        uint256 minToMint,\n        uint256 deadline\n    ) external returns (uint256);\n\n    function removeLiquidity(\n        uint256 amount,\n        uint256[] calldata minAmounts,\n        uint256 deadline\n    ) external returns (uint256[] memory);\n\n    function removeLiquidityOneToken(\n        uint256 tokenAmount,\n        uint8 tokenIndex,\n        uint256 minAmount,\n        uint256 deadline\n    ) external returns (uint256);\n\n    function removeLiquidityImbalance(\n        uint256[] calldata amounts,\n        uint256 maxBurnAmount,\n        uint256 deadline\n    ) external returns (uint256);\n}"
			},
			"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
			},
			"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"src/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.2;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x37c1b0a4a436e94fa52f40f9c9a6451ae76e7db73eed457dbaa3a7e75a634034\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62bdf7ee690f5ce25a0ede1579ff447c8060448020cc8a3f1cf4869c4d637117\",\"dweb:/ipfs/QmZ9Mxav2XWCUnc4vBwvhG4BBojSEbaMkkFLhJqBNKgVjd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x37c1b0a4a436e94fa52f40f9c9a6451ae76e7db73eed457dbaa3a7e75a634034\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62bdf7ee690f5ce25a0ede1579ff447c8060448020cc8a3f1cf4869c4d637117\",\"dweb:/ipfs/QmZ9Mxav2XWCUnc4vBwvhG4BBojSEbaMkkFLhJqBNKgVjd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol": {
				"Clones": {
					"abi": [],
					"devdoc": {
						"details": "https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":755:3701  library Clones {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":755:3701  library Clones {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122035111c281fbcca87ec38fc105bff57646bb7c4ac7b3e4ae3910681e02731169764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122035111c281fbcca87ec38fc105bff57646bb7c4ac7b3e4ae3910681e02731169764736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GT SHR 0x28 0x1F 0xBC 0xCA DUP8 0xEC CODESIZE 0xFC LT JUMPDEST SELFDESTRUCT JUMPI PUSH5 0x6BB7C4AC7B RETURNDATACOPY 0x4A 0xE3 SWAP2 MOD DUP2 0xE0 0x27 BALANCE AND SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "755:2946:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;755:2946:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122035111c281fbcca87ec38fc105bff57646bb7c4ac7b3e4ae3910681e02731169764736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD GT SHR 0x28 0x1F 0xBC 0xCA DUP8 0xEC CODESIZE 0xFC LT JUMPDEST SELFDESTRUCT JUMPI PUSH5 0x6BB7C4AC7B RETURNDATACOPY 0x4A 0xE3 SWAP2 MOD DUP2 0xE0 0x27 BALANCE AND SWAP8 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "755:2946:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"clone(address)": "infinite",
								"cloneDeterministic(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32)": "infinite",
								"predictDeterministicAddress(address,bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 755,
									"end": 3701,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122035111c281fbcca87ec38fc105bff57646bb7c4ac7b3e4ae3910681e02731169764736f6c63430008000033",
									".code": [
										{
											"begin": 755,
											"end": 3701,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 755,
											"end": 3701,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/SwapDeployer.sol": {
				"SwapDeployer": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "cloneAddress",
									"type": "address"
								}
							],
							"name": "NewClone",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "deployer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "swapAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "contract IERC20[]",
									"name": "pooledTokens",
									"type": "address[]"
								}
							],
							"name": "NewSwapPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "clone",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "swapAddress",
									"type": "address"
								},
								{
									"internalType": "contract IERC20[]",
									"name": "_pooledTokens",
									"type": "address[]"
								},
								{
									"internalType": "uint8[]",
									"name": "decimals",
									"type": "uint8[]"
								},
								{
									"internalType": "string",
									"name": "lpTokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "lpTokenSymbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_adminFee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "lpTokenTargetAddress",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/SwapDeployer.sol\":219:1548  contract SwapDeployer is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"src/SwapDeployer.sol\":448:481  constructor() public Ownable() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1139:1171  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1158:1170  _msgSender() */\n  tag_6\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1158:1168  _msgSender */\n  tag_7\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1158:1170  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1139:1157  _transferOwnership */\n  tag_8\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1139:1171  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"src/SwapDeployer.sol\":219:1548  contract SwapDeployer is Ownable {... */\n  jump(tag_10)\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":158:254  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":237:247  msg.sender */\n  caller\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":158:254  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2636:2823  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2709:2725  address oldOwner */\n  0x00\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2728:2734  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2744:2761  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2776:2816  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2728:2734  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2776:2816  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2709:2725  address oldOwner */\n  swap1\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2776:2816  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2636:2823  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"src/SwapDeployer.sol\":219:1548  contract SwapDeployer is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/SwapDeployer.sol\":219:1548  contract SwapDeployer is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0e64a45e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8124b78e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"src/SwapDeployer.sol\":777:1546  function deploy(... */\n    tag_3:\n      tag_8\n      tag_9\n      calldatasize\n      0x04\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2034:2135  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"src/SwapDeployer.sol\":487:662  function clone(address target) external returns (address) {... */\n    tag_5:\n      tag_8\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1404:1489  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_8\n      tag_22\n      jump\t// in\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2284:2482  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_14\n      tag_25\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n        /* \"src/SwapDeployer.sol\":777:1546  function deploy(... */\n    tag_11:\n        /* \"src/SwapDeployer.sol\":1097:1104  address */\n      0x00\n        /* \"src/SwapDeployer.sol\":1116:1133  address swapClone */\n      dup1\n        /* \"src/SwapDeployer.sol\":1136:1155  _clone(swapAddress) */\n      tag_28\n        /* \"src/SwapDeployer.sol\":1143:1154  swapAddress */\n      dup12\n        /* \"src/SwapDeployer.sol\":1136:1142  _clone */\n      tag_29\n        /* \"src/SwapDeployer.sol\":1136:1155  _clone(swapAddress) */\n      jump\t// in\n    tag_28:\n        /* \"src/SwapDeployer.sol\":1165:1394  ISwap(swapClone).initialize(... */\n      mload(0x40)\n      shl(0xe2, 0x2ca32db7)\n      dup2\n      mstore\n        /* \"src/SwapDeployer.sol\":1116:1155  address swapClone = _clone(swapAddress) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapDeployer.sol\":1165:1192  ISwap(swapClone).initialize */\n      dup3\n      and\n      swap1\n      0xb28cb6dc\n      swap1\n        /* \"src/SwapDeployer.sol\":1165:1394  ISwap(swapClone).initialize(... */\n      tag_30\n      swap1\n        /* \"src/SwapDeployer.sol\":1206:1219  _pooledTokens */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1233:1241  decimals */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1255:1266  lpTokenName */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1280:1293  lpTokenSymbol */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1307:1309  _a */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1323:1327  _fee */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1341:1350  _adminFee */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1364:1384  lpTokenTargetAddress */\n      dup14\n      swap1\n        /* \"src/SwapDeployer.sol\":1165:1394  ISwap(swapClone).initialize(... */\n      0x04\n      add\n      tag_31\n      jump\t// in\n    tag_30:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/SwapDeployer.sol\":1412:1421  swapClone */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapDeployer.sol\":1404:1440  Ownable(swapClone).transferOwnership */\n      and\n      0xf2fde38b\n        /* \"src/SwapDeployer.sol\":1441:1448  owner() */\n      tag_35\n        /* \"src/SwapDeployer.sol\":1441:1446  owner */\n      tag_22\n        /* \"src/SwapDeployer.sol\":1441:1448  owner() */\n      jump\t// in\n    tag_35:\n        /* \"src/SwapDeployer.sol\":1404:1449  Ownable(swapClone).transferOwnership(owner()) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_36:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/SwapDeployer.sol\":1476:1486  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapDeployer.sol\":1464:1513  NewSwapPool(msg.sender, swapClone, _pooledTokens) */\n      and\n      0x0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9\n        /* \"src/SwapDeployer.sol\":1488:1497  swapClone */\n      dup3\n        /* \"src/SwapDeployer.sol\":1499:1512  _pooledTokens */\n      dup13\n        /* \"src/SwapDeployer.sol\":1464:1513  NewSwapPool(msg.sender, swapClone, _pooledTokens) */\n      mload(0x40)\n      tag_40\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/SwapDeployer.sol\":1530:1539  swapClone */\n      swap1\n      pop\n        /* \"src/SwapDeployer.sol\":777:1546  function deploy(... */\n    tag_27:\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2034:2135  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1310  _checkOwner() */\n      tag_43\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1308  _checkOwner */\n      tag_44\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1310  _checkOwner() */\n      jump\t// in\n    tag_43:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2098:2128  _transferOwnership(address(0)) */\n      tag_46\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2125:2126  0 */\n      0x00\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2098:2116  _transferOwnership */\n      tag_47\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2098:2128  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_46:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2034:2135  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"src/SwapDeployer.sol\":487:662  function clone(address target) external returns (address) {... */\n    tag_19:\n        /* \"src/SwapDeployer.sol\":536:543  address */\n      0x00\n        /* \"src/SwapDeployer.sol\":555:571  address newClone */\n      dup1\n        /* \"src/SwapDeployer.sol\":574:588  _clone(target) */\n      tag_49\n        /* \"src/SwapDeployer.sol\":581:587  target */\n      dup4\n        /* \"src/SwapDeployer.sol\":574:580  _clone */\n      tag_29\n        /* \"src/SwapDeployer.sol\":574:588  _clone(target) */\n      jump\t// in\n    tag_49:\n        /* \"src/SwapDeployer.sol\":555:588  address newClone = _clone(target) */\n      swap1\n      pop\n        /* \"src/SwapDeployer.sol\":612:618  target */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/SwapDeployer.sol\":603:629  NewClone(target, newClone) */\n      and\n      0x3bf919a220a0f12ddcaf77fd06ffa4b9c728617774936f0d78b452010319c824\n        /* \"src/SwapDeployer.sol\":620:628  newClone */\n      dup3\n        /* \"src/SwapDeployer.sol\":603:629  NewClone(target, newClone) */\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/SwapDeployer.sol\":647:655  newClone */\n      swap1\n      pop\n        /* \"src/SwapDeployer.sol\":487:662  function clone(address target) external returns (address) {... */\n    tag_48:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1404:1489  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1450:1457  address */\n      0x00\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1476:1482  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1404:1489  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2284:2482  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1310  _checkOwner() */\n      tag_53\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1308  _checkOwner */\n      tag_44\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1297:1310  _checkOwner() */\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2372:2394  newOwner != address(0) */\n      dup2\n      and\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2364:2437  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2447:2475  _transferOwnership(newOwner) */\n      tag_58\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2466:2474  newOwner */\n      dup2\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2447:2465  _transferOwnership */\n      tag_47\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2447:2475  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_58:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2284:2482  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"src/SwapDeployer.sol\":668:771  function _clone(address target) internal returns (address) {... */\n    tag_29:\n        /* \"src/SwapDeployer.sol\":718:725  address */\n      0x00\n        /* \"src/SwapDeployer.sol\":744:764  Clones.clone(target) */\n      tag_60\n        /* \"src/SwapDeployer.sol\":757:763  target */\n      dup3\n        /* \"src/SwapDeployer.sol\":744:756  Clones.clone */\n      tag_61\n        /* \"src/SwapDeployer.sol\":744:764  Clones.clone(target) */\n      jump\t// in\n    tag_60:\n        /* \"src/SwapDeployer.sol\":737:764  return Clones.clone(target) */\n      swap3\n        /* \"src/SwapDeployer.sol\":668:771  function _clone(address target) internal returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1562:1692  function _checkOwner() internal view virtual {... */\n    tag_44:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1636:1648  _msgSender() */\n      tag_63\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1636:1646  _msgSender */\n      tag_64\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1636:1648  _msgSender() */\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1625:1648  owner() == _msgSender() */\n      and\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1625:1632  owner() */\n      tag_65\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1625:1630  owner */\n      tag_22\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1625:1632  owner() */\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1625:1648  owner() == _msgSender() */\n      and\n      eq\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":1617:1685  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_68\n      jump\t// in\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2636:2823  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_47:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2709:2725  address oldOwner */\n      0x00\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2728:2734  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2744:2761  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2776:2816  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2728:2734  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2776:2816  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2709:2725  address oldOwner */\n      swap1\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2776:2816  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":2636:2823  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":973:1531  function clone(address implementation) internal returns (address instance) {... */\n    tag_61:\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1030:1046  address instance */\n      0x00\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1141:1145  0x40 */\n      0x40\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1135:1146  mload(0x40) */\n      mload\n      shl(0x60, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73)\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1166:1169  ptr */\n      dup2\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1159:1238  mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000) */\n      mstore\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1284:1298  implementation */\n      dup3\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1278:1282  0x60 */\n      0x60\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1274:1299  shl(0x60, implementation) */\n      shl\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1267:1271  0x14 */\n      0x14\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1262:1265  ptr */\n      dup3\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1258:1272  add(ptr, 0x14) */\n      add\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1251:1300  mstore(add(ptr, 0x14), shl(0x60, implementation)) */\n      mstore\n      shl(0x88, 0x5af43d82803e903d91602b57fd5bf3)\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1329:1333  0x28 */\n      0x28\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1324:1327  ptr */\n      dup3\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1320:1334  add(ptr, 0x28) */\n      add\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1313:1403  mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000) */\n      mstore\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1443:1447  0x37 */\n      0x37\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1438:1441  ptr */\n      dup2\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1435:1436  0 */\n      0x00\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1428:1448  create(0, ptr, 0x37) */\n      create\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1416:1448  instance := create(0, ptr, 0x37) */\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1475:1497  instance != address(0) */\n      dup2\n      and\n        /* \"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":1467:1524  require(instance != address(0), \"ERC1167: create failed\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_73\n      jump\t// in\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":158:254  function _msgSender() internal view virtual returns (address) {... */\n    tag_64:\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":237:247  msg.sender */\n      caller\n        /* \"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":158:254  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:152   */\n    tag_76:\n        /* \"#utility.yul\":84:104   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":113:146   */\n      tag_48\n        /* \"#utility.yul\":84:104   */\n      dup2\n        /* \"#utility.yul\":113:146   */\n      tag_79\n      jump\t// in\n        /* \"#utility.yul\":157:933   */\n    tag_80:\n      0x00\n        /* \"#utility.yul\":267:270   */\n      dup3\n        /* \"#utility.yul\":260:264   */\n      0x1f\n        /* \"#utility.yul\":252:258   */\n      dup4\n        /* \"#utility.yul\":248:265   */\n      add\n        /* \"#utility.yul\":244:271   */\n      slt\n        /* \"#utility.yul\":234:236   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":289:294   */\n      dup1\n        /* \"#utility.yul\":282:287   */\n      dup2\n        /* \"#utility.yul\":275:295   */\n      revert\n        /* \"#utility.yul\":234:236   */\n    tag_82:\n        /* \"#utility.yul\":329:335   */\n      dup2\n        /* \"#utility.yul\":316:336   */\n      calldataload\n        /* \"#utility.yul\":355:359   */\n      0x20\n        /* \"#utility.yul\":379:441   */\n      tag_83\n        /* \"#utility.yul\":394:440   */\n      tag_84\n        /* \"#utility.yul\":437:439   */\n      dup4\n        /* \"#utility.yul\":394:440   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":379:441   */\n      tag_86\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":475:490   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":506:518   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":538:553   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":584:595   */\n      dup4\n      dup6\n      mul\n        /* \"#utility.yul\":572:596   */\n      dup8\n      add\n        /* \"#utility.yul\":568:601   */\n      dup5\n      add\n        /* \"#utility.yul\":565:607   */\n      dup9\n      lt\n        /* \"#utility.yul\":562:564   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":624:629   */\n      dup6\n        /* \"#utility.yul\":617:622   */\n      dup7\n        /* \"#utility.yul\":610:630   */\n      revert\n        /* \"#utility.yul\":562:564   */\n    tag_87:\n        /* \"#utility.yul\":650:655   */\n      dup6\n        /* \"#utility.yul\":664:904   */\n    tag_88:\n        /* \"#utility.yul\":678:680   */\n      dup6\n        /* \"#utility.yul\":675:676   */\n      dup2\n        /* \"#utility.yul\":672:681   */\n      lt\n        /* \"#utility.yul\":664:904   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":749:752   */\n      dup2\n        /* \"#utility.yul\":736:753   */\n      calldataload\n        /* \"#utility.yul\":766:799   */\n      tag_91\n        /* \"#utility.yul\":793:798   */\n      dup2\n        /* \"#utility.yul\":766:799   */\n      tag_79\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":812:830   */\n      dup5\n      mstore\n        /* \"#utility.yul\":850:862   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":882:894   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":696:697   */\n      0x01\n        /* \"#utility.yul\":689:698   */\n      add\n        /* \"#utility.yul\":664:904   */\n      jump(tag_88)\n    tag_90:\n      pop\n        /* \"#utility.yul\":922:927   */\n      swap1\n      swap8\n        /* \"#utility.yul\":224:933   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":938:1745   */\n    tag_92:\n      0x00\n        /* \"#utility.yul\":1049:1052   */\n      dup3\n        /* \"#utility.yul\":1042:1046   */\n      0x1f\n        /* \"#utility.yul\":1034:1040   */\n      dup4\n        /* \"#utility.yul\":1030:1047   */\n      add\n        /* \"#utility.yul\":1026:1053   */\n      slt\n        /* \"#utility.yul\":1016:1018   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":1071:1076   */\n      dup1\n        /* \"#utility.yul\":1064:1069   */\n      dup2\n        /* \"#utility.yul\":1057:1077   */\n      revert\n        /* \"#utility.yul\":1016:1018   */\n    tag_94:\n        /* \"#utility.yul\":1111:1117   */\n      dup2\n        /* \"#utility.yul\":1098:1118   */\n      calldataload\n        /* \"#utility.yul\":1137:1141   */\n      0x20\n        /* \"#utility.yul\":1161:1223   */\n      tag_95\n        /* \"#utility.yul\":1176:1222   */\n      tag_84\n        /* \"#utility.yul\":1219:1221   */\n      dup4\n        /* \"#utility.yul\":1176:1222   */\n      tag_85\n      jump\t// in\n        /* \"#utility.yul\":1161:1223   */\n    tag_95:\n        /* \"#utility.yul\":1257:1272   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":1288:1300   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1320:1335   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":1366:1377   */\n      dup4\n      dup6\n      mul\n        /* \"#utility.yul\":1354:1378   */\n      dup8\n      add\n        /* \"#utility.yul\":1350:1383   */\n      dup5\n      add\n        /* \"#utility.yul\":1347:1389   */\n      dup9\n      lt\n        /* \"#utility.yul\":1344:1346   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1406:1411   */\n      dup6\n        /* \"#utility.yul\":1399:1404   */\n      dup7\n        /* \"#utility.yul\":1392:1412   */\n      revert\n        /* \"#utility.yul\":1344:1346   */\n    tag_97:\n        /* \"#utility.yul\":1432:1437   */\n      dup6\n        /* \"#utility.yul\":1446:1716   */\n    tag_98:\n        /* \"#utility.yul\":1460:1462   */\n      dup6\n        /* \"#utility.yul\":1457:1458   */\n      dup2\n        /* \"#utility.yul\":1454:1463   */\n      lt\n        /* \"#utility.yul\":1446:1716   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":1531:1534   */\n      dup2\n        /* \"#utility.yul\":1518:1535   */\n      calldataload\n        /* \"#utility.yul\":1579:1583   */\n      0xff\n        /* \"#utility.yul\":1572:1577   */\n      dup2\n        /* \"#utility.yul\":1568:1584   */\n      and\n        /* \"#utility.yul\":1561:1566   */\n      dup2\n        /* \"#utility.yul\":1558:1585   */\n      eq\n        /* \"#utility.yul\":1548:1550   */\n      tag_101\n      jumpi\n        /* \"#utility.yul\":1603:1608   */\n      dup8\n        /* \"#utility.yul\":1596:1601   */\n      dup9\n        /* \"#utility.yul\":1589:1609   */\n      revert\n        /* \"#utility.yul\":1548:1550   */\n    tag_101:\n        /* \"#utility.yul\":1624:1642   */\n      dup5\n      mstore\n        /* \"#utility.yul\":1662:1674   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1694:1706   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":1478:1479   */\n      0x01\n        /* \"#utility.yul\":1471:1480   */\n      add\n        /* \"#utility.yul\":1446:1716   */\n      jump(tag_98)\n        /* \"#utility.yul\":1750:2302   */\n    tag_102:\n      0x00\n        /* \"#utility.yul\":1848:1851   */\n      dup3\n        /* \"#utility.yul\":1841:1845   */\n      0x1f\n        /* \"#utility.yul\":1833:1839   */\n      dup4\n        /* \"#utility.yul\":1829:1846   */\n      add\n        /* \"#utility.yul\":1825:1852   */\n      slt\n        /* \"#utility.yul\":1815:1817   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1870:1875   */\n      dup1\n        /* \"#utility.yul\":1863:1868   */\n      dup2\n        /* \"#utility.yul\":1856:1876   */\n      revert\n        /* \"#utility.yul\":1815:1817   */\n    tag_104:\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1897:1917   */\n      calldataload\n        /* \"#utility.yul\":1936:1954   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1932:1934   */\n      dup2\n        /* \"#utility.yul\":1929:1955   */\n      gt\n        /* \"#utility.yul\":1926:1928   */\n      iszero\n      tag_106\n      jumpi\n        /* \"#utility.yul\":1958:1976   */\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2002:2056   */\n      tag_108\n        /* \"#utility.yul\":2044:2046   */\n      0x1f\n        /* \"#utility.yul\":2025:2038   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2021:2048   */\n      and\n        /* \"#utility.yul\":2050:2054   */\n      0x20\n        /* \"#utility.yul\":2017:2055   */\n      add\n        /* \"#utility.yul\":2002:2056   */\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2081:2083   */\n      dup2\n        /* \"#utility.yul\":2072:2079   */\n      dup2\n        /* \"#utility.yul\":2065:2084   */\n      mstore\n        /* \"#utility.yul\":2127:2130   */\n      dup5\n        /* \"#utility.yul\":2120:2124   */\n      0x20\n        /* \"#utility.yul\":2115:2117   */\n      dup4\n        /* \"#utility.yul\":2107:2113   */\n      dup7\n        /* \"#utility.yul\":2103:2118   */\n      add\n        /* \"#utility.yul\":2099:2125   */\n      add\n        /* \"#utility.yul\":2096:2131   */\n      gt\n        /* \"#utility.yul\":2093:2095   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":2148:2153   */\n      dup3\n        /* \"#utility.yul\":2141:2146   */\n      dup4\n        /* \"#utility.yul\":2134:2154   */\n      revert\n        /* \"#utility.yul\":2093:2095   */\n    tag_109:\n        /* \"#utility.yul\":2217:2219   */\n      dup2\n        /* \"#utility.yul\":2210:2214   */\n      0x20\n        /* \"#utility.yul\":2202:2208   */\n      dup6\n        /* \"#utility.yul\":2198:2215   */\n      add\n        /* \"#utility.yul\":2191:2195   */\n      0x20\n        /* \"#utility.yul\":2182:2189   */\n      dup4\n        /* \"#utility.yul\":2178:2196   */\n      add\n        /* \"#utility.yul\":2165:2220   */\n      calldatacopy\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2258:2262   */\n      0x20\n        /* \"#utility.yul\":2236:2263   */\n      add\n        /* \"#utility.yul\":2229:2271   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2244:2251   */\n      swap3\n        /* \"#utility.yul\":1805:2302   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2307:2566   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2407:2416   */\n      dup3\n        /* \"#utility.yul\":2398:2405   */\n      dup5\n        /* \"#utility.yul\":2394:2417   */\n      sub\n        /* \"#utility.yul\":2390:2422   */\n      slt\n        /* \"#utility.yul\":2387:2389   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2432:2438   */\n      dup2\n        /* \"#utility.yul\":2425:2447   */\n      revert\n        /* \"#utility.yul\":2387:2389   */\n    tag_111:\n        /* \"#utility.yul\":2484:2493   */\n      dup2\n        /* \"#utility.yul\":2471:2494   */\n      calldataload\n        /* \"#utility.yul\":2503:2536   */\n      tag_112\n        /* \"#utility.yul\":2530:2535   */\n      dup2\n        /* \"#utility.yul\":2503:2536   */\n      tag_79\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2555:2560   */\n      swap4\n        /* \"#utility.yul\":2377:2566   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:4001   */\n    tag_10:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2901:2904   */\n      0x0120\n        /* \"#utility.yul\":2889:2898   */\n      dup11\n        /* \"#utility.yul\":2880:2887   */\n      dup13\n        /* \"#utility.yul\":2876:2899   */\n      sub\n        /* \"#utility.yul\":2872:2905   */\n      slt\n        /* \"#utility.yul\":2869:2871   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":2923:2929   */\n      dup5\n        /* \"#utility.yul\":2915:2921   */\n      dup6\n        /* \"#utility.yul\":2908:2930   */\n      revert\n        /* \"#utility.yul\":2869:2871   */\n    tag_114:\n        /* \"#utility.yul\":2951:2982   */\n      tag_115\n        /* \"#utility.yul\":2972:2981   */\n      dup11\n        /* \"#utility.yul\":2951:2982   */\n      tag_76\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2941:2982   */\n      swap9\n      pop\n        /* \"#utility.yul\":3033:3035   */\n      0x20\n        /* \"#utility.yul\":3022:3031   */\n      dup11\n        /* \"#utility.yul\":3018:3036   */\n      add\n        /* \"#utility.yul\":3005:3037   */\n      calldataload\n        /* \"#utility.yul\":3056:3074   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3097:3099   */\n      dup1\n        /* \"#utility.yul\":3089:3095   */\n      dup3\n        /* \"#utility.yul\":3086:3100   */\n      gt\n        /* \"#utility.yul\":3083:3085   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":3118:3124   */\n      dup7\n        /* \"#utility.yul\":3110:3116   */\n      dup8\n        /* \"#utility.yul\":3103:3125   */\n      revert\n        /* \"#utility.yul\":3083:3085   */\n    tag_116:\n        /* \"#utility.yul\":3146:3210   */\n      tag_117\n        /* \"#utility.yul\":3202:3209   */\n      dup14\n        /* \"#utility.yul\":3193:3199   */\n      dup4\n        /* \"#utility.yul\":3182:3191   */\n      dup15\n        /* \"#utility.yul\":3178:3200   */\n      add\n        /* \"#utility.yul\":3146:3210   */\n      tag_80\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3136:3210   */\n      swap10\n      pop\n        /* \"#utility.yul\":3263:3265   */\n      0x40\n        /* \"#utility.yul\":3252:3261   */\n      dup13\n        /* \"#utility.yul\":3248:3266   */\n      add\n        /* \"#utility.yul\":3235:3267   */\n      calldataload\n        /* \"#utility.yul\":3219:3267   */\n      swap2\n      pop\n        /* \"#utility.yul\":3292:3294   */\n      dup1\n        /* \"#utility.yul\":3282:3290   */\n      dup3\n        /* \"#utility.yul\":3279:3295   */\n      gt\n        /* \"#utility.yul\":3276:3278   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3313:3319   */\n      dup7\n        /* \"#utility.yul\":3305:3311   */\n      dup8\n        /* \"#utility.yul\":3298:3320   */\n      revert\n        /* \"#utility.yul\":3276:3278   */\n    tag_118:\n        /* \"#utility.yul\":3341:3408   */\n      tag_119\n        /* \"#utility.yul\":3400:3407   */\n      dup14\n        /* \"#utility.yul\":3389:3397   */\n      dup4\n        /* \"#utility.yul\":3378:3387   */\n      dup15\n        /* \"#utility.yul\":3374:3398   */\n      add\n        /* \"#utility.yul\":3341:3408   */\n      tag_92\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3331:3408   */\n      swap9\n      pop\n        /* \"#utility.yul\":3461:3463   */\n      0x60\n        /* \"#utility.yul\":3450:3459   */\n      dup13\n        /* \"#utility.yul\":3446:3464   */\n      add\n        /* \"#utility.yul\":3433:3465   */\n      calldataload\n        /* \"#utility.yul\":3417:3465   */\n      swap2\n      pop\n        /* \"#utility.yul\":3490:3492   */\n      dup1\n        /* \"#utility.yul\":3480:3488   */\n      dup3\n        /* \"#utility.yul\":3477:3493   */\n      gt\n        /* \"#utility.yul\":3474:3476   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":3511:3517   */\n      dup7\n        /* \"#utility.yul\":3503:3509   */\n      dup8\n        /* \"#utility.yul\":3496:3518   */\n      revert\n        /* \"#utility.yul\":3474:3476   */\n    tag_120:\n        /* \"#utility.yul\":3539:3593   */\n      tag_121\n        /* \"#utility.yul\":3585:3592   */\n      dup14\n        /* \"#utility.yul\":3574:3582   */\n      dup4\n        /* \"#utility.yul\":3563:3572   */\n      dup15\n        /* \"#utility.yul\":3559:3583   */\n      add\n        /* \"#utility.yul\":3539:3593   */\n      tag_102\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":3529:3593   */\n      swap8\n      pop\n        /* \"#utility.yul\":3646:3649   */\n      0x80\n        /* \"#utility.yul\":3635:3644   */\n      dup13\n        /* \"#utility.yul\":3631:3650   */\n      add\n        /* \"#utility.yul\":3618:3651   */\n      calldataload\n        /* \"#utility.yul\":3602:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3676:3678   */\n      dup1\n        /* \"#utility.yul\":3666:3674   */\n      dup3\n        /* \"#utility.yul\":3663:3679   */\n      gt\n        /* \"#utility.yul\":3660:3662   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":3697:3703   */\n      dup7\n        /* \"#utility.yul\":3689:3695   */\n      dup8\n        /* \"#utility.yul\":3682:3704   */\n      revert\n        /* \"#utility.yul\":3660:3662   */\n    tag_122:\n      pop\n        /* \"#utility.yul\":3725:3779   */\n      tag_123\n        /* \"#utility.yul\":3771:3778   */\n      dup13\n        /* \"#utility.yul\":3760:3768   */\n      dup3\n        /* \"#utility.yul\":3749:3758   */\n      dup14\n        /* \"#utility.yul\":3745:3769   */\n      add\n        /* \"#utility.yul\":3725:3779   */\n      tag_102\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3715:3779   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":3826:3829   */\n      0xa0\n        /* \"#utility.yul\":3815:3824   */\n      dup11\n        /* \"#utility.yul\":3811:3830   */\n      add\n        /* \"#utility.yul\":3798:3831   */\n      calldataload\n        /* \"#utility.yul\":3788:3831   */\n      swap4\n      pop\n        /* \"#utility.yul\":3878:3881   */\n      0xc0\n        /* \"#utility.yul\":3867:3876   */\n      dup11\n        /* \"#utility.yul\":3863:3882   */\n      add\n        /* \"#utility.yul\":3850:3883   */\n      calldataload\n        /* \"#utility.yul\":3840:3883   */\n      swap3\n      pop\n        /* \"#utility.yul\":3930:3933   */\n      0xe0\n        /* \"#utility.yul\":3919:3928   */\n      dup11\n        /* \"#utility.yul\":3915:3934   */\n      add\n        /* \"#utility.yul\":3902:3935   */\n      calldataload\n        /* \"#utility.yul\":3892:3935   */\n      swap2\n      pop\n        /* \"#utility.yul\":3954:3995   */\n      tag_124\n        /* \"#utility.yul\":3990:3993   */\n      0x0100\n        /* \"#utility.yul\":3979:3988   */\n      dup12\n        /* \"#utility.yul\":3975:3994   */\n      add\n        /* \"#utility.yul\":3954:3995   */\n      tag_76\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3944:3995   */\n      swap1\n      pop\n        /* \"#utility.yul\":2859:4001   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      jump\t// out\n        /* \"#utility.yul\":4006:4112   */\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4074:4105   */\n      and\n        /* \"#utility.yul\":4062:4106   */\n      swap1\n      mstore\n        /* \"#utility.yul\":4052:4112   */\n      jump\t// out\n        /* \"#utility.yul\":4117:4583   */\n    tag_127:\n      0x00\n        /* \"#utility.yul\":4211:4216   */\n      dup2\n        /* \"#utility.yul\":4205:4217   */\n      mload\n        /* \"#utility.yul\":4238:4244   */\n      dup1\n        /* \"#utility.yul\":4233:4236   */\n      dup5\n        /* \"#utility.yul\":4226:4245   */\n      mstore\n        /* \"#utility.yul\":4264:4268   */\n      0x20\n        /* \"#utility.yul\":4293:4295   */\n      dup1\n        /* \"#utility.yul\":4288:4291   */\n      dup6\n        /* \"#utility.yul\":4284:4296   */\n      add\n        /* \"#utility.yul\":4277:4296   */\n      swap5\n      pop\n        /* \"#utility.yul\":4330:4332   */\n      dup1\n        /* \"#utility.yul\":4323:4328   */\n      dup5\n        /* \"#utility.yul\":4319:4333   */\n      add\n        /* \"#utility.yul\":4351:4354   */\n      dup4\n        /* \"#utility.yul\":4363:4558   */\n    tag_129:\n        /* \"#utility.yul\":4377:4383   */\n      dup4\n        /* \"#utility.yul\":4374:4375   */\n      dup2\n        /* \"#utility.yul\":4371:4384   */\n      lt\n        /* \"#utility.yul\":4363:4558   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4442:4455   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4438:4477   */\n      and\n        /* \"#utility.yul\":4426:4478   */\n      dup8\n      mstore\n        /* \"#utility.yul\":4498:4510   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":4533:4548   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4474:4475   */\n      0x01\n        /* \"#utility.yul\":4392:4401   */\n      add\n        /* \"#utility.yul\":4363:4558   */\n      jump(tag_129)\n    tag_131:\n      pop\n        /* \"#utility.yul\":4574:4577   */\n      swap5\n      swap6\n        /* \"#utility.yul\":4181:4583   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4588:5066   */\n    tag_132:\n      0x00\n        /* \"#utility.yul\":4670:4675   */\n      dup2\n        /* \"#utility.yul\":4664:4676   */\n      mload\n        /* \"#utility.yul\":4697:4703   */\n      dup1\n        /* \"#utility.yul\":4692:4695   */\n      dup5\n        /* \"#utility.yul\":4685:4704   */\n      mstore\n        /* \"#utility.yul\":4722:4725   */\n      dup2\n        /* \"#utility.yul\":4734:4896   */\n    tag_134:\n        /* \"#utility.yul\":4748:4754   */\n      dup2\n        /* \"#utility.yul\":4745:4746   */\n      dup2\n        /* \"#utility.yul\":4742:4755   */\n      lt\n        /* \"#utility.yul\":4734:4896   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":4810:4814   */\n      0x20\n        /* \"#utility.yul\":4866:4879   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":4862:4884   */\n      dup2\n      add\n        /* \"#utility.yul\":4856:4885   */\n      mload\n        /* \"#utility.yul\":4838:4849   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":4834:4854   */\n      dup3\n      add\n        /* \"#utility.yul\":4827:4886   */\n      mstore\n        /* \"#utility.yul\":4763:4775   */\n      add\n        /* \"#utility.yul\":4734:4896   */\n      jump(tag_134)\n    tag_136:\n        /* \"#utility.yul\":4914:4920   */\n      dup2\n        /* \"#utility.yul\":4911:4912   */\n      dup2\n        /* \"#utility.yul\":4908:4921   */\n      gt\n        /* \"#utility.yul\":4905:4907   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":4980:4983   */\n      dup3\n        /* \"#utility.yul\":4973:4977   */\n      0x20\n        /* \"#utility.yul\":4964:4970   */\n      dup4\n        /* \"#utility.yul\":4959:4962   */\n      dup8\n        /* \"#utility.yul\":4955:4971   */\n      add\n        /* \"#utility.yul\":4951:4978   */\n      add\n        /* \"#utility.yul\":4944:4984   */\n      mstore\n        /* \"#utility.yul\":4905:4907   */\n    tag_137:\n      pop\n        /* \"#utility.yul\":5048:5050   */\n      0x1f\n        /* \"#utility.yul\":5027:5042   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5023:5052   */\n      and\n        /* \"#utility.yul\":5014:5053   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":5055:5059   */\n      0x20\n        /* \"#utility.yul\":5010:5060   */\n      add\n      swap3\n        /* \"#utility.yul\":4640:5066   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5274   */\n    tag_13:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5235:5267   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5217:5268   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5205:5207   */\n      0x20\n        /* \"#utility.yul\":5190:5208   */\n      add\n      swap1\n        /* \"#utility.yul\":5172:5274   */\n      jump\t// out\n        /* \"#utility.yul\":5279:5654   */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5500:5532   */\n      dup4\n      and\n        /* \"#utility.yul\":5482:5533   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5569:5571   */\n      0x40\n        /* \"#utility.yul\":5564:5566   */\n      0x20\n        /* \"#utility.yul\":5549:5567   */\n      dup3\n      add\n        /* \"#utility.yul\":5542:5572   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5279:5654   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5589:5648   */\n      tag_140\n      swap1\n        /* \"#utility.yul\":5629:5647   */\n      dup4\n      add\n        /* \"#utility.yul\":5621:5627   */\n      dup5\n        /* \"#utility.yul\":5589:5648   */\n      tag_127\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5581:5648   */\n      swap5\n        /* \"#utility.yul\":5472:5654   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5659:7112   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":6126:6129   */\n      0x0100\n        /* \"#utility.yul\":6156:6158   */\n      dup1\n        /* \"#utility.yul\":6145:6154   */\n      dup4\n        /* \"#utility.yul\":6138:6159   */\n      mstore\n        /* \"#utility.yul\":6182:6241   */\n      tag_142\n        /* \"#utility.yul\":6237:6239   */\n      dup2\n        /* \"#utility.yul\":6226:6235   */\n      dup5\n        /* \"#utility.yul\":6222:6240   */\n      add\n        /* \"#utility.yul\":6214:6220   */\n      dup13\n        /* \"#utility.yul\":6182:6241   */\n      tag_127\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6168:6241   */\n      swap1\n      pop\n        /* \"#utility.yul\":6260:6262   */\n      0x20\n        /* \"#utility.yul\":6310:6319   */\n      dup4\n        /* \"#utility.yul\":6302:6308   */\n      dup3\n        /* \"#utility.yul\":6298:6320   */\n      sub\n        /* \"#utility.yul\":6293:6295   */\n      dup2\n        /* \"#utility.yul\":6282:6291   */\n      dup6\n        /* \"#utility.yul\":6278:6296   */\n      add\n        /* \"#utility.yul\":6271:6321   */\n      mstore\n        /* \"#utility.yul\":6341:6347   */\n      dup2\n        /* \"#utility.yul\":6376:6382   */\n      dup12\n        /* \"#utility.yul\":6370:6383   */\n      mload\n        /* \"#utility.yul\":6407:6413   */\n      dup1\n        /* \"#utility.yul\":6399:6405   */\n      dup5\n        /* \"#utility.yul\":6392:6414   */\n      mstore\n        /* \"#utility.yul\":6442:6444   */\n      dup3\n        /* \"#utility.yul\":6434:6440   */\n      dup5\n        /* \"#utility.yul\":6430:6445   */\n      add\n        /* \"#utility.yul\":6423:6445   */\n      swap2\n      pop\n        /* \"#utility.yul\":6480:6482   */\n      dup3\n        /* \"#utility.yul\":6472:6478   */\n      dup14\n        /* \"#utility.yul\":6468:6483   */\n      add\n        /* \"#utility.yul\":6454:6483   */\n      swap4\n      pop\n        /* \"#utility.yul\":6501:6505   */\n      dup5\n        /* \"#utility.yul\":6514:6694   */\n    tag_143:\n        /* \"#utility.yul\":6528:6534   */\n      dup2\n        /* \"#utility.yul\":6525:6526   */\n      dup2\n        /* \"#utility.yul\":6522:6535   */\n      lt\n        /* \"#utility.yul\":6514:6694   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":6593:6606   */\n      dup5\n      mload\n        /* \"#utility.yul\":6608:6612   */\n      0xff\n        /* \"#utility.yul\":6589:6613   */\n      and\n        /* \"#utility.yul\":6577:6614   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6669:6684   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":6634:6646   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":6550:6551   */\n      0x01\n        /* \"#utility.yul\":6543:6552   */\n      add\n        /* \"#utility.yul\":6514:6694   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":6518:6521   */\n      pop\n      pop\n        /* \"#utility.yul\":6739:6748   */\n      dup5\n        /* \"#utility.yul\":6734:6737   */\n      dup2\n        /* \"#utility.yul\":6730:6749   */\n      sub\n        /* \"#utility.yul\":6725:6727   */\n      0x40\n        /* \"#utility.yul\":6714:6723   */\n      dup7\n        /* \"#utility.yul\":6710:6728   */\n      add\n        /* \"#utility.yul\":6703:6750   */\n      mstore\n        /* \"#utility.yul\":6773:6805   */\n      tag_146\n        /* \"#utility.yul\":6801:6804   */\n      dup2\n        /* \"#utility.yul\":6793:6799   */\n      dup13\n        /* \"#utility.yul\":6773:6805   */\n      tag_132\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6759:6805   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6853:6862   */\n      dup3\n        /* \"#utility.yul\":6845:6851   */\n      dup2\n        /* \"#utility.yul\":6841:6863   */\n      sub\n        /* \"#utility.yul\":6836:6838   */\n      0x60\n        /* \"#utility.yul\":6825:6834   */\n      dup5\n        /* \"#utility.yul\":6821:6839   */\n      add\n        /* \"#utility.yul\":6814:6864   */\n      mstore\n        /* \"#utility.yul\":6881:6916   */\n      tag_147\n        /* \"#utility.yul\":6909:6915   */\n      dup2\n        /* \"#utility.yul\":6901:6907   */\n      dup10\n        /* \"#utility.yul\":6881:6916   */\n      tag_132\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":6873:6916   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6953:6959   */\n      dup6\n        /* \"#utility.yul\":6947:6950   */\n      0x80\n        /* \"#utility.yul\":6936:6945   */\n      dup4\n        /* \"#utility.yul\":6932:6951   */\n      add\n        /* \"#utility.yul\":6925:6960   */\n      mstore\n        /* \"#utility.yul\":6997:7003   */\n      dup5\n        /* \"#utility.yul\":6991:6994   */\n      0xa0\n        /* \"#utility.yul\":6980:6989   */\n      dup4\n        /* \"#utility.yul\":6976:6995   */\n      add\n        /* \"#utility.yul\":6969:7004   */\n      mstore\n        /* \"#utility.yul\":7041:7047   */\n      dup4\n        /* \"#utility.yul\":7035:7038   */\n      0xc0\n        /* \"#utility.yul\":7024:7033   */\n      dup4\n        /* \"#utility.yul\":7020:7039   */\n      add\n        /* \"#utility.yul\":7013:7048   */\n      mstore\n        /* \"#utility.yul\":7057:7106   */\n      tag_27\n        /* \"#utility.yul\":7101:7104   */\n      0xe0\n        /* \"#utility.yul\":7090:7099   */\n      dup4\n        /* \"#utility.yul\":7086:7105   */\n      add\n        /* \"#utility.yul\":7078:7084   */\n      dup5\n        /* \"#utility.yul\":7057:7106   */\n      tag_125\n      jump\t// in\n        /* \"#utility.yul\":7117:7519   */\n    tag_57:\n        /* \"#utility.yul\":7319:7321   */\n      0x20\n        /* \"#utility.yul\":7301:7322   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7358:7360   */\n      0x26\n        /* \"#utility.yul\":7338:7356   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7331:7361   */\n      mstore\n        /* \"#utility.yul\":7397:7431   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7392:7394   */\n      0x40\n        /* \"#utility.yul\":7377:7395   */\n      dup3\n      add\n        /* \"#utility.yul\":7370:7432   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7463:7465   */\n      0x60\n        /* \"#utility.yul\":7448:7466   */\n      dup3\n      add\n        /* \"#utility.yul\":7441:7477   */\n      mstore\n        /* \"#utility.yul\":7509:7512   */\n      0x80\n        /* \"#utility.yul\":7494:7513   */\n      add\n      swap1\n        /* \"#utility.yul\":7291:7519   */\n      jump\t// out\n        /* \"#utility.yul\":7524:7870   */\n    tag_73:\n        /* \"#utility.yul\":7726:7728   */\n      0x20\n        /* \"#utility.yul\":7708:7729   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7765:7767   */\n      0x16\n        /* \"#utility.yul\":7745:7763   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7738:7768   */\n      mstore\n      shl(0x52, 0x115490cc4c4d8dce8818dc99585d194819985a5b1959)\n        /* \"#utility.yul\":7799:7801   */\n      0x40\n        /* \"#utility.yul\":7784:7802   */\n      dup3\n      add\n        /* \"#utility.yul\":7777:7829   */\n      mstore\n        /* \"#utility.yul\":7861:7863   */\n      0x60\n        /* \"#utility.yul\":7846:7864   */\n      add\n      swap1\n        /* \"#utility.yul\":7698:7870   */\n      jump\t// out\n        /* \"#utility.yul\":7875:8231   */\n    tag_68:\n        /* \"#utility.yul\":8077:8079   */\n      0x20\n        /* \"#utility.yul\":8059:8080   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8096:8114   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8089:8119   */\n      mstore\n        /* \"#utility.yul\":8155:8189   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8150:8152   */\n      0x40\n        /* \"#utility.yul\":8135:8153   */\n      dup3\n      add\n        /* \"#utility.yul\":8128:8190   */\n      mstore\n        /* \"#utility.yul\":8222:8224   */\n      0x60\n        /* \"#utility.yul\":8207:8225   */\n      add\n      swap1\n        /* \"#utility.yul\":8049:8231   */\n      jump\t// out\n        /* \"#utility.yul\":8236:8487   */\n    tag_86:\n        /* \"#utility.yul\":8306:8308   */\n      0x40\n        /* \"#utility.yul\":8300:8309   */\n      mload\n        /* \"#utility.yul\":8336:8353   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8383:8401   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8368:8402   */\n      dup2\n      gt\n        /* \"#utility.yul\":8404:8426   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":8365:8427   */\n      or\n        /* \"#utility.yul\":8362:8364   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":8430:8448   */\n      tag_154\n      tag_107\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":8466:8468   */\n      0x40\n        /* \"#utility.yul\":8459:8481   */\n      mstore\n        /* \"#utility.yul\":8280:8487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8492:8681   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":8588:8606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8580:8586   */\n      dup3\n        /* \"#utility.yul\":8577:8607   */\n      gt\n        /* \"#utility.yul\":8574:8576   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":8610:8628   */\n      tag_157\n      tag_107\n      jump\t// in\n    tag_157:\n      pop\n        /* \"#utility.yul\":8670:8674   */\n      0x20\n        /* \"#utility.yul\":8651:8668   */\n      swap1\n      dup2\n      mul\n        /* \"#utility.yul\":8647:8675   */\n      add\n      swap1\n        /* \"#utility.yul\":8564:8681   */\n      jump\t// out\n        /* \"#utility.yul\":8686:8813   */\n    tag_107:\n        /* \"#utility.yul\":8747:8757   */\n      0x4e487b71\n        /* \"#utility.yul\":8742:8745   */\n      0xe0\n        /* \"#utility.yul\":8738:8758   */\n      shl\n        /* \"#utility.yul\":8735:8736   */\n      0x00\n        /* \"#utility.yul\":8728:8759   */\n      mstore\n        /* \"#utility.yul\":8778:8782   */\n      0x41\n        /* \"#utility.yul\":8775:8776   */\n      0x04\n        /* \"#utility.yul\":8768:8783   */\n      mstore\n        /* \"#utility.yul\":8802:8806   */\n      0x24\n        /* \"#utility.yul\":8799:8800   */\n      0x00\n        /* \"#utility.yul\":8792:8807   */\n      revert\n        /* \"#utility.yul\":8818:8951   */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8895:8926   */\n      dup2\n      and\n        /* \"#utility.yul\":8885:8927   */\n      dup2\n      eq\n        /* \"#utility.yul\":8875:8877   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":8941:8942   */\n      0x00\n        /* \"#utility.yul\":8938:8939   */\n      dup1\n        /* \"#utility.yul\":8931:8943   */\n      revert\n\n    auxdata: 0xa264697066735822122012b07ad46abaee0a8ffc7449e44307629bb414caca51f27cebd870634ed4dee064736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108ee806100896000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630e64a45e1461005c578063715018a6146100855780638124b78e1461008f5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610536565b6100bd565b60405161007c91906106b8565b60405180910390f35b61008d6101f0565b005b61006f61009d366004610513565b610204565b61006f61025b565b61008d6100b8366004610513565b61026a565b6000806100c98b6102ad565b604051632ca32db760e21b81529091506001600160a01b0382169063b28cb6dc90610106908d908d908d908d908d908d908d908d906004016106f8565b600060405180830381600087803b15801561012057600080fd5b505af1158015610134573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b61014f61025b565b6040518263ffffffff1660e01b815260040161016b91906106b8565b600060405180830381600087803b15801561018557600080fd5b505af1158015610199573d6000803e3d6000fd5b50505050336001600160a01b03167f0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9828c6040516101d89291906106cc565b60405180910390a290505b9998505050505050505050565b6101f86102be565b61020260006102fd565b565b600080610210836102ad565b9050826001600160a01b03167f3bf919a220a0f12ddcaf77fd06ffa4b9c728617774936f0d78b452010319c8248260405161024b91906106b8565b60405180910390a290505b919050565b6000546001600160a01b031690565b6102726102be565b6001600160a01b0381166102a15760405162461bcd60e51b815260040161029890610794565b60405180910390fd5b6102aa816102fd565b50565b60006102b88261034d565b92915050565b6102c66103bc565b6001600160a01b03166102d761025b565b6001600160a01b0316146102025760405162461bcd60e51b81526004016102989061080a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166102565760405162461bcd60e51b8152600401610298906107da565b3390565b8035610256816108a3565b600082601f8301126103db578081fd5b813560206103f06103eb83610869565b61083f565b828152818101908583018385028701840188101561040c578586fd5b855b85811015610433578135610421816108a3565b8452928401929084019060010161040e565b5090979650505050505050565b600082601f830112610450578081fd5b813560206104606103eb83610869565b828152818101908583018385028701840188101561047c578586fd5b855b8581101561043357813560ff81168114610496578788fd5b8452928401929084019060010161047e565b600082601f8301126104b8578081fd5b813567ffffffffffffffff8111156104d2576104d261088d565b6104e5601f8201601f191660200161083f565b8181528460208386010111156104f9578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610524578081fd5b813561052f816108a3565b9392505050565b60008060008060008060008060006101208a8c031215610554578485fd5b61055d8a6103c0565b985060208a013567ffffffffffffffff80821115610579578687fd5b6105858d838e016103cb565b995060408c013591508082111561059a578687fd5b6105a68d838e01610440565b985060608c01359150808211156105bb578687fd5b6105c78d838e016104a8565b975060808c01359150808211156105dc578687fd5b506105e98c828d016104a8565b95505060a08a0135935060c08a0135925060e08a0135915061060e6101008b016103c0565b90509295985092959850929598565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156106625781516001600160a01b03168752958201959082019060010161063d565b509495945050505050565b60008151808452815b8181101561069257602081850181015186830182015201610676565b818111156106a35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03831681526040602082018190526000906106f09083018461062a565b949350505050565b600061010080835261070c8184018c61062a565b9050602083820381850152818b518084528284019150828d019350845b8181101561074857845160ff1683529383019391830191600101610729565b5050848103604086015261075c818c61066d565b925050508281036060840152610772818961066d565b9150508560808301528460a08301528360c08301526101e360e083018461061d565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260169082015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60405181810167ffffffffffffffff811182821017156108615761086161088d565b604052919050565b600067ffffffffffffffff8211156108835761088361088d565b5060209081020190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146102aa57600080fdfea264697066735822122012b07ad46abaee0a8ffc7449e44307629bb414caca51f27cebd870634ed4dee064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21 PUSH2 0x1C PUSH2 0x26 JUMP JUMPDEST PUSH2 0x2A JUMP JUMPDEST PUSH2 0x7A JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8EE DUP1 PUSH2 0x89 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE64A45E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x8124B78E EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x536 JUMP JUMPDEST PUSH2 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x1F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x25B JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9 DUP12 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CA32DB7 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB28CB6DC SWAP1 PUSH2 0x106 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2FDE38B PUSH2 0x14F PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x838512B7934222CEC571CF3FDE1CF3E9E864BBC431BD5D1EF4D9ED3079093D9 DUP3 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP3 SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2BE JUMP JUMPDEST PUSH2 0x202 PUSH1 0x0 PUSH2 0x2FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x210 DUP4 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3BF919A220A0F12DDCAF77FD06FFA4B9C728617774936F0D78B452010319C824 DUP3 PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AA DUP2 PUSH2 0x2FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8 DUP3 PUSH2 0x34D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D7 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x7DA JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x256 DUP2 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3F0 PUSH2 0x3EB DUP4 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x83F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x40C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x433 JUMPI DUP2 CALLDATALOAD PUSH2 0x421 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x40E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x450 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x460 PUSH2 0x3EB DUP4 PUSH2 0x869 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x47C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x433 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x496 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x47E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4D2 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x83F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4F9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x524 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x52F DUP2 PUSH2 0x8A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x554 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x55D DUP11 PUSH2 0x3C0 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x579 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x585 DUP14 DUP4 DUP15 ADD PUSH2 0x3CB JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x59A JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x5A6 DUP14 DUP4 DUP15 ADD PUSH2 0x440 JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5BB JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x5C7 DUP14 DUP4 DUP15 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5DC JUMPI DUP7 DUP8 REVERT JUMPDEST POP PUSH2 0x5E9 DUP13 DUP3 DUP14 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x60E PUSH2 0x100 DUP12 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x662 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x63D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x692 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x676 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6A3 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x6F0 SWAP1 DUP4 ADD DUP5 PUSH2 0x62A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x70C DUP2 DUP5 ADD DUP13 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 DUP3 SUB DUP2 DUP6 ADD MSTORE DUP2 DUP12 MLOAD DUP1 DUP5 MSTORE DUP3 DUP5 ADD SWAP2 POP DUP3 DUP14 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x748 JUMPI DUP5 MLOAD PUSH1 0xFF AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x729 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x75C DUP2 DUP13 PUSH2 0x66D JUMP JUMPDEST SWAP3 POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x772 DUP2 DUP10 PUSH2 0x66D JUMP JUMPDEST SWAP2 POP POP DUP6 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1E3 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x861 JUMPI PUSH2 0x861 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x883 PUSH2 0x88D JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB0 PUSH27 0xD46ABAEE0A8FFC7449E44307629BB414CACA51F27CEBD870634ED4 0xDE 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "219:1329:2:-:0;;;448:33;;;;;;;;;-1:-1:-1;1139:32:0;1158:12;:10;:12::i;:::-;1139:18;:32::i;:::-;219:1329:2;;158:96:0;237:10;158:96;:::o;2636:187::-;2709:16;2728:6;;-1:-1:-1;;;;;2744:17:0;;;-1:-1:-1;;;;;;2744:17:0;;;;;;2776:40;;2728:6;;;;;;;2776:40;;2709:16;2776:40;2636:187;;:::o;219:1329:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8953:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "140:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "113:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "113:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "113:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:5",
														"type": ""
													}
												],
												"src": "14:138:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "224:709:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "273:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "282:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "289:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "275:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "275:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "275:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "252:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "260:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "248:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "248:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "267:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "244:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "237:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:35:5"
															},
															"nodeType": "YulIf",
															"src": "234:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "306:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "329:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "316:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:20:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "310:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "345:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "355:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "349:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "437:2:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_IERC20_$dyn",
																			"nodeType": "YulIdentifier",
																			"src": "394:42:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "394:46:5"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "379:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "379:62:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "372:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "450:16:5",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "463:3:5"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "454:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "482:3:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "487:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "475:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "475:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "475:15:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "499:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "515:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:12:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "499:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "527:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "542:6:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "550:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:15:5"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "531:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "608:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "617:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "624:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "610:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "610:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "610:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "576:6:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "588:2:5"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "592:2:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "584:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "584:11:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "572:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "572:24:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "598:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "568:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "568:33:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "603:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "565:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:42:5"
															},
															"nodeType": "YulIf",
															"src": "562:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "641:14:5",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "650:5:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "645:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "709:195:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "723:30:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:5"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "736:12:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "736:17:5"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "727:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "793:5:5"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "766:26:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "766:33:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "766:33:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "819:3:5"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "824:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "812:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "812:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "812:18:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "843:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "854:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "859:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "850:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "850:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "843:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "875:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "886:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "891:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "882:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "882:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "875:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "675:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "678:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "672:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "682:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "693:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "696:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "689:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "689:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "684:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "668:3:5",
																"statements": []
															},
															"src": "664:240:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "913:14:5",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "922:5:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "913:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_IERC20_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "198:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "206:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "214:5:5",
														"type": ""
													}
												],
												"src": "157:776:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1006:739:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1055:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1064:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1071:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1057:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1057:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1034:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1042:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1030:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1049:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1019:35:5"
															},
															"nodeType": "YulIf",
															"src": "1016:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1088:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1111:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1098:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1098:20:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1092:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1127:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1137:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1131:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1150:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1219:2:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_IERC20_$dyn",
																			"nodeType": "YulIdentifier",
																			"src": "1176:42:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1176:46:5"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1161:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1161:62:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1154:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1232:16:5",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1245:3:5"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1236:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1264:3:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1269:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1257:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1257:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1257:15:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1281:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1292:3:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1297:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1288:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1288:12:5"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1281:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1309:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1332:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1320:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:15:5"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1313:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1390:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1399:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1406:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1392:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1392:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1392:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1358:6:5"
																					},
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1370:2:5"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "1374:2:5"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "1366:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1366:11:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:24:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1380:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1350:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1350:33:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1385:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1347:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1347:42:5"
															},
															"nodeType": "YulIf",
															"src": "1344:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1423:14:5",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1432:5:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1427:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1491:225:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1505:30:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:5"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1518:12:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1518:17:5"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "1509:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1587:24:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1596:5:5"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1603:5:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1589:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1589:20:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1589:20:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "1561:5:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "1572:5:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1579:4:5",
																									"type": "",
																									"value": "0xff"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "1568:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1568:16:5"
																						}
																					],
																					"functionName": {
																						"name": "eq",
																						"nodeType": "YulIdentifier",
																						"src": "1558:2:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1558:27:5"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "1551:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1551:35:5"
																		},
																		"nodeType": "YulIf",
																		"src": "1548:2:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1631:3:5"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "1636:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1624:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1624:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1624:18:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1655:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1666:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1671:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1662:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1662:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1655:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1687:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1703:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1694:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1694:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1687:3:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1457:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1460:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1454:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1464:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1466:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1475:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1478:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1471:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1471:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1466:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1450:3:5",
																"statements": []
															},
															"src": "1446:270:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1725:14:5",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1734:5:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint8_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "980:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "988:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "996:5:5",
														"type": ""
													}
												],
												"src": "938:807:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1805:497:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1854:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1863:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1870:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1833:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1841:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1829:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1829:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1848:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1825:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1825:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:35:5"
															},
															"nodeType": "YulIf",
															"src": "1815:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1887:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:20:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1891:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1956:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1958:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1958:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1958:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1932:2:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1936:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1929:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1929:26:5"
															},
															"nodeType": "YulIf",
															"src": "1926:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1987:69:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2029:2:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2033:4:5",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2025:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2025:13:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2044:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2040:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2040:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2021:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2021:27:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2050:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2017:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2017:38:5"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2002:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2002:54:5"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "1991:7:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2072:7:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2081:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2065:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2065:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2065:19:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2132:24:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2141:5:5"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2148:5:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:20:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2134:20:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2107:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2115:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2103:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2103:15:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2120:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2099:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2099:26:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2127:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2096:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:35:5"
															},
															"nodeType": "YulIf",
															"src": "2093:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2182:7:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2191:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2202:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2210:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2198:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2198:17:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2217:2:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2165:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2165:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2244:7:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2253:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2240:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2240:16:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2258:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2236:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:27:5"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2265:5:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2229:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2280:16:5",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2289:7:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2280:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1779:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1787:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1795:5:5",
														"type": ""
													}
												],
												"src": "1750:552:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:189:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2432:6:5"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2440:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2425:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2425:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2425:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2398:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2407:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2394:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2390:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:32:5"
															},
															"nodeType": "YulIf",
															"src": "2387:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2458:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2484:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2471:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2462:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2530:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2503:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2503:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2545:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2555:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2343:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2354:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2366:6:5",
														"type": ""
													}
												],
												"src": "2307:259:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2859:1142:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2906:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2915:6:5"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "2923:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2908:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2908:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2908:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2880:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2889:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2876:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:3:5",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2872:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2872:33:5"
															},
															"nodeType": "YulIf",
															"src": "2869:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2941:41:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2972:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2951:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:31:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2941:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2991:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3022:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3033:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3018:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3018:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3005:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3005:32:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2995:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3046:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3056:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3050:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3101:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3110:6:5"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3118:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3103:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3103:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3103:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3089:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3097:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3086:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:14:5"
															},
															"nodeType": "YulIf",
															"src": "3083:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3136:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3182:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3193:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3178:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3202:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_IERC20_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3146:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:64:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3136:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3219:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3252:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3263:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3248:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3248:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3235:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3235:32:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3223:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3296:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3305:6:5"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3313:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3298:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3298:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3298:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3292:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3279:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:16:5"
															},
															"nodeType": "YulIf",
															"src": "3276:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3331:77:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3378:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3389:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3374:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3374:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3400:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_uint8_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3341:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3341:67:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3331:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3417:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3450:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3461:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3446:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3433:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3433:32:5"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3421:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3494:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3503:6:5"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3511:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3496:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3496:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3496:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3480:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3490:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3477:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3477:16:5"
															},
															"nodeType": "YulIf",
															"src": "3474:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3529:64:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3563:9:5"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3574:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3585:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "3539:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3539:54:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3529:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3602:49:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3635:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3646:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3631:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3618:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3618:33:5"
															},
															"variables": [
																{
																	"name": "offset_3",
																	"nodeType": "YulTypedName",
																	"src": "3606:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3680:26:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3689:6:5"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "3697:6:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3682:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3682:22:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3682:22:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_3",
																		"nodeType": "YulIdentifier",
																		"src": "3666:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3676:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3663:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3663:16:5"
															},
															"nodeType": "YulIf",
															"src": "3660:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3715:64:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3749:9:5"
																			},
																			{
																				"name": "offset_3",
																				"nodeType": "YulIdentifier",
																				"src": "3760:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3745:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3745:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3771:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "3725:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3725:54:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3715:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3788:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3815:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3826:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3811:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3811:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3798:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:33:5"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3840:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3867:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3878:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3863:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3863:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3850:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3850:33:5"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3892:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3919:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3930:3:5",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3902:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:33:5"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:51:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3979:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3990:3:5",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3975:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3975:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3954:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3954:41:5"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nodeType": "YulIdentifier",
																	"src": "3944:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_contract$_IERC20_$416_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2761:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2772:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2784:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2792:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2800:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2808:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2816:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2824:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2832:6:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2840:6:5",
														"type": ""
													},
													{
														"name": "value8",
														"nodeType": "YulTypedName",
														"src": "2848:6:5",
														"type": ""
													}
												],
												"src": "2571:1430:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4052:60:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4069:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4078:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4093:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4098:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4089:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4089:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4102:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4085:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4085:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4074:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:31:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4062:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4062:44:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4062:44:5"
														}
													]
												},
												"name": "abi_encode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4036:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4043:3:5",
														"type": ""
													}
												],
												"src": "4006:106:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4181:402:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4191:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4211:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4205:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4205:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4195:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4233:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4226:19:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4254:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4264:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4258:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4277:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4288:3:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4293:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4277:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4305:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4323:5:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4330:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4319:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4319:14:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4309:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4342:12:5",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "4351:3:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4346:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4412:146:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4448:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4442:5:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4442:13:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4465:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4470:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4461:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4461:11:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4474:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4457:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4457:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4438:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4438:39:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4426:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4426:52:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4426:52:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4491:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4502:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4507:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4498:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4498:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4491:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4523:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4537:6:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4545:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4533:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4533:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4523:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4374:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4377:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4371:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4371:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4385:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4387:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4396:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4399:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4392:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4392:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4387:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4367:3:5",
																"statements": []
															},
															"src": "4363:195:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4567:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4574:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_IERC20_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4158:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4165:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4173:3:5",
														"type": ""
													}
												],
												"src": "4117:466:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4640:426:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4650:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4670:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4664:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4664:12:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4654:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4692:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4697:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4685:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4685:19:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4713:12:5",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "4722:3:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4717:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4786:110:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4800:14:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4810:4:5",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "4804:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "4842:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4847:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4838:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4838:11:5"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4851:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4834:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4834:20:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "4870:5:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "4877:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4866:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4866:13:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4881:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4862:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4862:22:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4856:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4856:29:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4827:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4827:59:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4827:59:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4745:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4748:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4742:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4756:21:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4758:17:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4767:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4770:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4763:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4763:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4758:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4738:3:5",
																"statements": []
															},
															"src": "4734:162:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4930:64:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "4959:3:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "4964:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4955:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4955:16:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4973:4:5",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4951:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4951:27:5"
																				},
																				{
																					"name": "end",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4944:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4944:40:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4944:40:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4911:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4914:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4908:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:13:5"
															},
															"nodeType": "YulIf",
															"src": "4905:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5003:57:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5018:3:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "5031:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5039:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5027:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5027:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5048:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5044:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5044:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5023:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5023:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:39:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5055:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:50:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4617:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4624:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4632:3:5",
														"type": ""
													}
												],
												"src": "4588:478:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5182:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5194:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5205:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5190:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5224:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5239:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5255:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5260:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5251:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5251:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5264:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5247:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5247:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5235:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5217:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5217:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5217:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5141:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5152:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:5",
														"type": ""
													}
												],
												"src": "5071:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5489:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5504:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5520:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5525:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5516:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5516:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5529:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5512:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5512:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5500:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5500:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5553:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5564:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5569:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5542:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:30:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5581:67:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5621:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5633:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5644:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5629:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5629:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_IERC20_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5589:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:59:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5581:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5433:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5444:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5452:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5463:4:5",
														"type": ""
													}
												],
												"src": "5279:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6106:1006:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6116:13:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6126:3:5",
																"type": "",
																"value": "256"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6120:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6145:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6156:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6168:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6214:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6226:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6237:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6222:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6222:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_IERC20_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6182:31:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:59:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6172:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6250:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6260:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6254:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6282:9:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6293:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "6302:6:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6310:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6298:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6298:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6271:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6271:50:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6330:17:5",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "6341:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "6334:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6356:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6376:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6370:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6370:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6360:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6399:6:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6407:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6392:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6392:22:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6423:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6434:6:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6442:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6430:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6430:15:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6423:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6454:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6472:6:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6480:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6468:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6468:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6458:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6492:13:5",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "6501:4:5"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6496:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6563:131:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6584:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6599:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "6593:5:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6593:13:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6608:4:5",
																							"type": "",
																							"value": "0xff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6589:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6589:24:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6577:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6577:37:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6577:37:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6627:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6638:3:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "6643:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6634:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6634:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6659:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6673:6:5"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "6681:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6669:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6669:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6659:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6525:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6528:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6522:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6522:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6536:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6538:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6547:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6550:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6543:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6543:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6538:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6518:3:5",
																"statements": []
															},
															"src": "6514:180:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6714:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6725:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6710:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6739:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6730:19:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6703:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6703:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6703:47:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6759:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6793:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6801:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "6773:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6773:32:5"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "6763:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6825:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6836:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6821:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "6845:6:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6841:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6841:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6814:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6814:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6814:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6873:43:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6901:6:5"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "6909:6:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string",
																	"nodeType": "YulIdentifier",
																	"src": "6881:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6881:35:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6873:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6936:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6947:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6932:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6953:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6980:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6991:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6976:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6976:19:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "6997:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6969:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6969:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6969:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7024:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7035:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7020:19:5"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "7041:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7013:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7013:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7013:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "7078:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7090:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7101:3:5",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7086:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7086:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7057:20:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7057:49:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7057:49:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6019:9:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "6030:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "6038:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6046:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6054:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6062:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6070:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6078:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6086:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6097:4:5",
														"type": ""
													}
												],
												"src": "5659:1453:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7291:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7308:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7319:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7301:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7342:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7353:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7338:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7338:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7358:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7331:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7331:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7331:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7381:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7392:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7377:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7377:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7397:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7370:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7370:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7370:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7452:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7463:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7448:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7448:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7468:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7441:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7441:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7441:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7486:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7498:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7494:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7486:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7268:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7282:4:5",
														"type": ""
													}
												],
												"src": "7117:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7698:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7715:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7726:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7708:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7708:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7708:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7749:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7760:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7745:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7745:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7765:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7738:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7738:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7738:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7788:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7799:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7784:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7784:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7804:24:5",
																		"type": "",
																		"value": "ERC1167: create failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7777:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7777:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7777:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7838:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7861:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7846:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7838:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7675:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7689:4:5",
														"type": ""
													}
												],
												"src": "7524:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8049:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8066:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8077:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8059:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8059:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8100:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8111:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8096:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8096:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8116:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8089:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8089:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8139:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8150:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8135:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8135:18:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8155:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8128:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8128:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8128:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8199:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8211:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8222:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8207:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8207:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8199:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8026:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8040:4:5",
														"type": ""
													}
												],
												"src": "7875:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8280:207:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8290:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8306:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8300:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8300:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8318:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8340:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8348:4:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8336:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:17:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8322:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8428:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8430:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8430:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8430:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8371:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8383:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8368:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8368:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8407:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8419:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8404:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8404:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8365:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8365:62:5"
															},
															"nodeType": "YulIf",
															"src": "8362:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8470:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8459:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8459:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8459:22:5"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8260:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8269:6:5",
														"type": ""
													}
												],
												"src": "8236:251:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8564:117:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8608:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8610:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8610:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8610:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8580:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8577:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:30:5"
															},
															"nodeType": "YulIf",
															"src": "8574:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8639:36:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8655:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8663:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8651:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8651:17:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8670:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8647:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8647:28:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8639:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_IERC20_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8544:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8555:4:5",
														"type": ""
													}
												],
												"src": "8492:189:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8718:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8735:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8742:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8747:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8738:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8728:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8728:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8728:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8775:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8778:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8768:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8768:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8768:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8799:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8802:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8792:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8686:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8865:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8929:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8938:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8941:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8931:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8931:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8931:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8888:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8899:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8914:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8919:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "8910:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8910:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8923:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "8906:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8906:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8895:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8895:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8885:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8885:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8878:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8878:50:5"
															},
															"nodeType": "YulIf",
															"src": "8875:2:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8854:5:5",
														"type": ""
													}
												],
												"src": "8818:133:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_array$_IERC20_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocateMemory(array_allocation_size_t_array$_IERC20_$dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_t_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_array$_t_uint8_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocateMemory(array_allocation_size_t_array$_IERC20_$dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, mul(_1, _2)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xff))) { revert(array, array) }\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocateMemory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_array$_t_contract$_IERC20_$416_$dyn_memory_ptrt_array$_t_uint8_$dyn_memory_ptrt_string_memory_ptrt_string_memory_ptrt_uint256t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(value4, value4) }\n        value0 := abi_decode_t_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        value1 := abi_decode_t_array$_IERC20_$dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value2 := abi_decode_t_array$_t_uint8_$dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(value4, value4) }\n        value3 := abi_decode_t_string(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(value4, value4) }\n        value4 := abi_decode_t_string(add(headStart, offset_3), dataEnd)\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := calldataload(add(headStart, 224))\n        value8 := abi_decode_t_address(add(headStart, 256))\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_array$_IERC20_$dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_array$_IERC20_$dyn(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint8_$dyn_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 256\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_t_array$_IERC20_$dyn(value0, add(headStart, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), sub(tail_1, headStart))\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(tail_1, _2)\n        let srcPtr := add(value1, _2)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xff))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let tail_2 := abi_encode_t_string(value2, pos)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        tail := abi_encode_t_string(value3, tail_2)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        abi_encode_t_address(value7, add(headStart, 224))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_t_array$_IERC20_$dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(mul(length, 0x20), 0x20)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80630e64a45e1461005c578063715018a6146100855780638124b78e1461008f5780638da5cb5b146100a2578063f2fde38b146100aa575b600080fd5b61006f61006a366004610536565b6100bd565b60405161007c91906106b8565b60405180910390f35b61008d6101f0565b005b61006f61009d366004610513565b610204565b61006f61025b565b61008d6100b8366004610513565b61026a565b6000806100c98b6102ad565b604051632ca32db760e21b81529091506001600160a01b0382169063b28cb6dc90610106908d908d908d908d908d908d908d908d906004016106f8565b600060405180830381600087803b15801561012057600080fd5b505af1158015610134573d6000803e3d6000fd5b50505050806001600160a01b031663f2fde38b61014f61025b565b6040518263ffffffff1660e01b815260040161016b91906106b8565b600060405180830381600087803b15801561018557600080fd5b505af1158015610199573d6000803e3d6000fd5b50505050336001600160a01b03167f0838512b7934222cec571cf3fde1cf3e9e864bbc431bd5d1ef4d9ed3079093d9828c6040516101d89291906106cc565b60405180910390a290505b9998505050505050505050565b6101f86102be565b61020260006102fd565b565b600080610210836102ad565b9050826001600160a01b03167f3bf919a220a0f12ddcaf77fd06ffa4b9c728617774936f0d78b452010319c8248260405161024b91906106b8565b60405180910390a290505b919050565b6000546001600160a01b031690565b6102726102be565b6001600160a01b0381166102a15760405162461bcd60e51b815260040161029890610794565b60405180910390fd5b6102aa816102fd565b50565b60006102b88261034d565b92915050565b6102c66103bc565b6001600160a01b03166102d761025b565b6001600160a01b0316146102025760405162461bcd60e51b81526004016102989061080a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166102565760405162461bcd60e51b8152600401610298906107da565b3390565b8035610256816108a3565b600082601f8301126103db578081fd5b813560206103f06103eb83610869565b61083f565b828152818101908583018385028701840188101561040c578586fd5b855b85811015610433578135610421816108a3565b8452928401929084019060010161040e565b5090979650505050505050565b600082601f830112610450578081fd5b813560206104606103eb83610869565b828152818101908583018385028701840188101561047c578586fd5b855b8581101561043357813560ff81168114610496578788fd5b8452928401929084019060010161047e565b600082601f8301126104b8578081fd5b813567ffffffffffffffff8111156104d2576104d261088d565b6104e5601f8201601f191660200161083f565b8181528460208386010111156104f9578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610524578081fd5b813561052f816108a3565b9392505050565b60008060008060008060008060006101208a8c031215610554578485fd5b61055d8a6103c0565b985060208a013567ffffffffffffffff80821115610579578687fd5b6105858d838e016103cb565b995060408c013591508082111561059a578687fd5b6105a68d838e01610440565b985060608c01359150808211156105bb578687fd5b6105c78d838e016104a8565b975060808c01359150808211156105dc578687fd5b506105e98c828d016104a8565b95505060a08a0135935060c08a0135925060e08a0135915061060e6101008b016103c0565b90509295985092959850929598565b6001600160a01b03169052565b6000815180845260208085019450808401835b838110156106625781516001600160a01b03168752958201959082019060010161063d565b509495945050505050565b60008151808452815b8181101561069257602081850181015186830182015201610676565b818111156106a35782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03831681526040602082018190526000906106f09083018461062a565b949350505050565b600061010080835261070c8184018c61062a565b9050602083820381850152818b518084528284019150828d019350845b8181101561074857845160ff1683529383019391830191600101610729565b5050848103604086015261075c818c61066d565b925050508281036060840152610772818961066d565b9150508560808301528460a08301528360c08301526101e360e083018461061d565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260169082015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60405181810167ffffffffffffffff811182821017156108615761086161088d565b604052919050565b600067ffffffffffffffff8211156108835761088361088d565b5060209081020190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146102aa57600080fdfea264697066735822122012b07ad46abaee0a8ffc7449e44307629bb414caca51f27cebd870634ed4dee064736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE64A45E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x8124B78E EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x536 JUMP JUMPDEST PUSH2 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x1F0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x9D CALLDATASIZE PUSH1 0x4 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x204 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x25B JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x513 JUMP JUMPDEST PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC9 DUP12 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CA32DB7 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xB28CB6DC SWAP1 PUSH2 0x106 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x134 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2FDE38B PUSH2 0x14F PUSH2 0x25B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x199 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x838512B7934222CEC571CF3FDE1CF3E9E864BBC431BD5D1EF4D9ED3079093D9 DUP3 DUP13 PUSH1 0x40 MLOAD PUSH2 0x1D8 SWAP3 SWAP2 SWAP1 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1F8 PUSH2 0x2BE JUMP JUMPDEST PUSH2 0x202 PUSH1 0x0 PUSH2 0x2FD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x210 DUP4 PUSH2 0x2AD JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x3BF919A220A0F12DDCAF77FD06FFA4B9C728617774936F0D78B452010319C824 DUP3 PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x272 PUSH2 0x2BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AA DUP2 PUSH2 0x2FD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B8 DUP3 PUSH2 0x34D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C6 PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D7 PUSH2 0x25B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x202 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x298 SWAP1 PUSH2 0x7DA JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x256 DUP2 PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3DB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x3F0 PUSH2 0x3EB DUP4 PUSH2 0x869 JUMP JUMPDEST PUSH2 0x83F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x40C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x433 JUMPI DUP2 CALLDATALOAD PUSH2 0x421 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x40E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x450 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x460 PUSH2 0x3EB DUP4 PUSH2 0x869 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP2 DUP2 ADD SWAP1 DUP6 DUP4 ADD DUP4 DUP6 MUL DUP8 ADD DUP5 ADD DUP9 LT ISZERO PUSH2 0x47C JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x433 JUMPI DUP2 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x496 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x47E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4B8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH2 0x4D2 PUSH2 0x88D JUMP JUMPDEST PUSH2 0x4E5 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x83F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x4F9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x524 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x52F DUP2 PUSH2 0x8A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x554 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x55D DUP11 PUSH2 0x3C0 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x579 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x585 DUP14 DUP4 DUP15 ADD PUSH2 0x3CB JUMP JUMPDEST SWAP10 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x59A JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x5A6 DUP14 DUP4 DUP15 ADD PUSH2 0x440 JUMP JUMPDEST SWAP9 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5BB JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x5C7 DUP14 DUP4 DUP15 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5DC JUMPI DUP7 DUP8 REVERT JUMPDEST POP PUSH2 0x5E9 DUP13 DUP3 DUP14 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP3 POP PUSH1 0xE0 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH2 0x60E PUSH2 0x100 DUP12 ADD PUSH2 0x3C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x662 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x63D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x692 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x676 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x6A3 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x6F0 SWAP1 DUP4 ADD DUP5 PUSH2 0x62A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP1 DUP4 MSTORE PUSH2 0x70C DUP2 DUP5 ADD DUP13 PUSH2 0x62A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP4 DUP3 SUB DUP2 DUP6 ADD MSTORE DUP2 DUP12 MLOAD DUP1 DUP5 MSTORE DUP3 DUP5 ADD SWAP2 POP DUP3 DUP14 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x748 JUMPI DUP5 MLOAD PUSH1 0xFF AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x729 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x75C DUP2 DUP13 PUSH2 0x66D JUMP JUMPDEST SWAP3 POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x772 DUP2 DUP10 PUSH2 0x66D JUMP JUMPDEST SWAP2 POP POP DUP6 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE DUP4 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1E3 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x61D JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x861 JUMPI PUSH2 0x861 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x883 JUMPI PUSH2 0x883 PUSH2 0x88D JUMP JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB0 PUSH27 0xD46ABAEE0A8FFC7449E44307629BB414CACA51F27CEBD870634ED4 0xDE 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "219:1329:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:769;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2034:101:0;;;:::i;:::-;;487:175:2;;;;;;:::i;:::-;;:::i;1404:85:0:-;;;:::i;2284:198::-;;;;;;:::i;:::-;;:::i;777:769:2:-;1097:7;1116:17;1136:19;1143:11;1136:6;:19::i;:::-;1165:229;;-1:-1:-1;;;1165:229:2;;1116:39;;-1:-1:-1;;;;;;1165:27:2;;;;;:229;;1206:13;;1233:8;;1255:11;;1280:13;;1307:2;;1323:4;;1341:9;;1364:20;;1165:229;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:9;-1:-1:-1;;;;;1404:36:2;;1441:7;:5;:7::i;:::-;1404:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1476:10;-1:-1:-1;;;;;1464:49:2;;1488:9;1499:13;1464:49;;;;;;;:::i;:::-;;;;;;;;1530:9;-1:-1:-1;777:769:2;;;;;;;;;;;;:::o;2034:101:0:-;1297:13;:11;:13::i;:::-;2098:30:::1;2125:1;2098:18;:30::i;:::-;2034:101::o:0;487:175:2:-;536:7;555:16;574:14;581:6;574;:14::i;:::-;555:33;;612:6;-1:-1:-1;;;;;603:26:2;;620:8;603:26;;;;;;:::i;:::-;;;;;;;;647:8;-1:-1:-1;487:175:2;;;;:::o;1404:85:0:-;1450:7;1476:6;-1:-1:-1;;;;;1476:6:0;1404:85;:::o;2284:198::-;1297:13;:11;:13::i;:::-;-1:-1:-1;;;;;2372:22:0;::::1;2364:73;;;;-1:-1:-1::0;;;2364:73:0::1;;;;;;;:::i;:::-;;;;;;;;;2447:28;2466:8;2447:18;:28::i;:::-;2284:198:::0;:::o;668:103:2:-;718:7;744:20;757:6;744:12;:20::i;:::-;737:27;668:103;-1:-1:-1;;668:103:2:o;1562:130:0:-;1636:12;:10;:12::i;:::-;-1:-1:-1;;;;;1625:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1625:23:0;;1617:68;;;;-1:-1:-1;;;1617:68:0;;;;;;;:::i;2636:187::-;2709:16;2728:6;;-1:-1:-1;;;;;2744:17:0;;;-1:-1:-1;;;;;;2744:17:0;;;;;;2776:40;;2728:6;;;;;;;2776:40;;2709:16;2776:40;2636:187;;:::o;973:558:1:-;1030:16;1141:4;1135:11;-1:-1:-1;;;1166:3:1;1159:79;1284:14;1278:4;1274:25;1267:4;1262:3;1258:14;1251:49;-1:-1:-1;;;1329:4:1;1324:3;1320:14;1313:90;1443:4;1438:3;1435:1;1428:20;1416:32;-1:-1:-1;;;;;;;1475:22:1;;1467:57;;;;-1:-1:-1;;;1467:57:1;;;;;;;:::i;158:96:0:-;237:10;158:96;:::o;14:138:5:-;84:20;;113:33;84:20;113:33;:::i;157:776::-;;267:3;260:4;252:6;248:17;244:27;234:2;;289:5;282;275:20;234:2;329:6;316:20;355:4;379:62;394:46;437:2;394:46;:::i;:::-;379:62;:::i;:::-;475:15;;;506:12;;;;538:15;;;584:11;;;572:24;;568:33;;565:42;-1:-1:-1;562:2:5;;;624:5;617;610:20;562:2;650:5;664:240;678:2;675:1;672:9;664:240;;;749:3;736:17;766:33;793:5;766:33;:::i;:::-;812:18;;850:12;;;;882;;;;696:1;689:9;664:240;;;-1:-1:-1;922:5:5;;224:709;-1:-1:-1;;;;;;;224:709:5:o;938:807::-;;1049:3;1042:4;1034:6;1030:17;1026:27;1016:2;;1071:5;1064;1057:20;1016:2;1111:6;1098:20;1137:4;1161:62;1176:46;1219:2;1176:46;:::i;1161:62::-;1257:15;;;1288:12;;;;1320:15;;;1366:11;;;1354:24;;1350:33;;1347:42;-1:-1:-1;1344:2:5;;;1406:5;1399;1392:20;1344:2;1432:5;1446:270;1460:2;1457:1;1454:9;1446:270;;;1531:3;1518:17;1579:4;1572:5;1568:16;1561:5;1558:27;1548:2;;1603:5;1596;1589:20;1548:2;1624:18;;1662:12;;;;1694;;;;1478:1;1471:9;1446:270;;1750:552;;1848:3;1841:4;1833:6;1829:17;1825:27;1815:2;;1870:5;1863;1856:20;1815:2;1910:6;1897:20;1936:18;1932:2;1929:26;1926:2;;;1958:18;;:::i;:::-;2002:54;2044:2;2025:13;;-1:-1:-1;;2021:27:5;2050:4;2017:38;2002:54;:::i;:::-;2081:2;2072:7;2065:19;2127:3;2120:4;2115:2;2107:6;2103:15;2099:26;2096:35;2093:2;;;2148:5;2141;2134:20;2093:2;2217;2210:4;2202:6;2198:17;2191:4;2182:7;2178:18;2165:55;2240:16;;;2258:4;2236:27;2229:42;;;;2244:7;1805:497;-1:-1:-1;;1805:497:5:o;2307:259::-;;2419:2;2407:9;2398:7;2394:23;2390:32;2387:2;;;2440:6;2432;2425:22;2387:2;2484:9;2471:23;2503:33;2530:5;2503:33;:::i;:::-;2555:5;2377:189;-1:-1:-1;;;2377:189:5:o;2571:1430::-;;;;;;;;;;2901:3;2889:9;2880:7;2876:23;2872:33;2869:2;;;2923:6;2915;2908:22;2869:2;2951:31;2972:9;2951:31;:::i;:::-;2941:41;;3033:2;3022:9;3018:18;3005:32;3056:18;3097:2;3089:6;3086:14;3083:2;;;3118:6;3110;3103:22;3083:2;3146:64;3202:7;3193:6;3182:9;3178:22;3146:64;:::i;:::-;3136:74;;3263:2;3252:9;3248:18;3235:32;3219:48;;3292:2;3282:8;3279:16;3276:2;;;3313:6;3305;3298:22;3276:2;3341:67;3400:7;3389:8;3378:9;3374:24;3341:67;:::i;:::-;3331:77;;3461:2;3450:9;3446:18;3433:32;3417:48;;3490:2;3480:8;3477:16;3474:2;;;3511:6;3503;3496:22;3474:2;3539:54;3585:7;3574:8;3563:9;3559:24;3539:54;:::i;:::-;3529:64;;3646:3;3635:9;3631:19;3618:33;3602:49;;3676:2;3666:8;3663:16;3660:2;;;3697:6;3689;3682:22;3660:2;;3725:54;3771:7;3760:8;3749:9;3745:24;3725:54;:::i;:::-;3715:64;;;3826:3;3815:9;3811:19;3798:33;3788:43;;3878:3;3867:9;3863:19;3850:33;3840:43;;3930:3;3919:9;3915:19;3902:33;3892:43;;3954:41;3990:3;3979:9;3975:19;3954:41;:::i;:::-;3944:51;;2859:1142;;;;;;;;;;;:::o;4006:106::-;-1:-1:-1;;;;;4074:31:5;4062:44;;4052:60::o;4117:466::-;;4211:5;4205:12;4238:6;4233:3;4226:19;4264:4;4293:2;4288:3;4284:12;4277:19;;4330:2;4323:5;4319:14;4351:3;4363:195;4377:6;4374:1;4371:13;4363:195;;;4442:13;;-1:-1:-1;;;;;4438:39:5;4426:52;;4498:12;;;;4533:15;;;;4474:1;4392:9;4363:195;;;-1:-1:-1;4574:3:5;;4181:402;-1:-1:-1;;;;;4181:402:5:o;4588:478::-;;4670:5;4664:12;4697:6;4692:3;4685:19;4722:3;4734:162;4748:6;4745:1;4742:13;4734:162;;;4810:4;4866:13;;;4862:22;;4856:29;4838:11;;;4834:20;;4827:59;4763:12;4734:162;;;4914:6;4911:1;4908:13;4905:2;;;4980:3;4973:4;4964:6;4959:3;4955:16;4951:27;4944:40;4905:2;-1:-1:-1;5048:2:5;5027:15;-1:-1:-1;;5023:29:5;5014:39;;;;5055:4;5010:50;;4640:426;-1:-1:-1;;4640:426:5:o;5071:203::-;-1:-1:-1;;;;;5235:32:5;;;;5217:51;;5205:2;5190:18;;5172:102::o;5279:375::-;-1:-1:-1;;;;;5500:32:5;;5482:51;;5569:2;5564;5549:18;;5542:30;;;5279:375;;5589:59;;5629:18;;5621:6;5589:59;:::i;:::-;5581:67;5472:182;-1:-1:-1;;;;5472:182:5:o;5659:1453::-;;6126:3;6156:2;6145:9;6138:21;6182:59;6237:2;6226:9;6222:18;6214:6;6182:59;:::i;:::-;6168:73;;6260:2;6310:9;6302:6;6298:22;6293:2;6282:9;6278:18;6271:50;6341:6;6376;6370:13;6407:6;6399;6392:22;6442:2;6434:6;6430:15;6423:22;;6480:2;6472:6;6468:15;6454:29;;6501:4;6514:180;6528:6;6525:1;6522:13;6514:180;;;6593:13;;6608:4;6589:24;6577:37;;6669:15;;;;6634:12;;;;6550:1;6543:9;6514:180;;;6518:3;;6739:9;6734:3;6730:19;6725:2;6714:9;6710:18;6703:47;6773:32;6801:3;6793:6;6773:32;:::i;:::-;6759:46;;;;6853:9;6845:6;6841:22;6836:2;6825:9;6821:18;6814:50;6881:35;6909:6;6901;6881:35;:::i;:::-;6873:43;;;6953:6;6947:3;6936:9;6932:19;6925:35;6997:6;6991:3;6980:9;6976:19;6969:35;7041:6;7035:3;7024:9;7020:19;7013:35;7057:49;7101:3;7090:9;7086:19;7078:6;7057:49;:::i;7117:402::-;7319:2;7301:21;;;7358:2;7338:18;;;7331:30;7397:34;7392:2;7377:18;;7370:62;-1:-1:-1;;;7463:2:5;7448:18;;7441:36;7509:3;7494:19;;7291:228::o;7524:346::-;7726:2;7708:21;;;7765:2;7745:18;;;7738:30;-1:-1:-1;;;7799:2:5;7784:18;;7777:52;7861:2;7846:18;;7698:172::o;7875:356::-;8077:2;8059:21;;;8096:18;;;8089:30;8155:34;8150:2;8135:18;;8128:62;8222:2;8207:18;;8049:182::o;8236:251::-;8306:2;8300:9;8336:17;;;8383:18;8368:34;;8404:22;;;8365:62;8362:2;;;8430:18;;:::i;:::-;8466:2;8459:22;8280:207;;-1:-1:-1;8280:207:5:o;8492:189::-;;8588:18;8580:6;8577:30;8574:2;;;8610:18;;:::i;:::-;-1:-1:-1;8670:4:5;8651:17;;;8647:28;;8564:117::o;8686:127::-;8747:10;8742:3;8738:20;8735:1;8728:31;8778:4;8775:1;8768:15;8802:4;8799:1;8792:15;8818:133;-1:-1:-1;;;;;8895:31:5;;8885:42;;8875:2;;8941:1;8938;8931:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "457200",
								"executionCost": "22961",
								"totalCost": "480161"
							},
							"external": {
								"clone(address)": "infinite",
								"deploy(address,address[],uint8[],string,string,uint256,uint256,uint256,address)": "infinite",
								"owner()": "1114",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_clone(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 481,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 481,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 448,
									"end": 481,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 448,
									"end": 481,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1139,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1158,
									"end": 1170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1158,
									"end": 1168,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1158,
									"end": 1170,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1158,
									"end": 1170,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1158,
									"end": 1170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1139,
									"end": 1157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1139,
									"end": 1171,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1139,
									"end": 1171,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1139,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 158,
									"end": 254,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 158,
									"end": 254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 237,
									"end": 247,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 158,
									"end": 254,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 158,
									"end": 254,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 2636,
									"end": 2823,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2636,
									"end": 2823,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2709,
									"end": 2725,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2744,
									"end": 2761,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2816,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2776,
									"end": 2816,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2728,
									"end": 2734,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2816,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2776,
									"end": 2816,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2709,
									"end": 2725,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2776,
									"end": 2816,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2636,
									"end": 2823,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2636,
									"end": 2823,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2636,
									"end": 2823,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 219,
									"end": 1548,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012b07ad46abaee0a8ffc7449e44307629bb414caca51f27cebd870634ed4dee064736f6c63430008000033",
									".code": [
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "E64A45E"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "8124B78E"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 219,
											"end": 1548,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 487,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1133,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1143,
											"end": 1154,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1136,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2CA32DB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "PUSH",
											"source": 2,
											"value": "B28CB6DC"
										},
										{
											"begin": 1165,
											"end": 1192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1219,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1206,
											"end": 1219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1241,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1255,
											"end": 1266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1293,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1309,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1341,
											"end": 1350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1384,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1404,
											"end": 1440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1440,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1441,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1441,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1476,
											"end": 1486,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "PUSH",
											"source": 2,
											"value": "838512B7934222CEC571CF3FDE1CF3E9E864BBC431BD5D1EF4D9ED3079093D9"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1499,
											"end": 1512,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1464,
											"end": 1513,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1530,
											"end": 1539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 1546,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1297,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2135,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 536,
											"end": 543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 555,
											"end": 571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 574,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 574,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 574,
											"end": 588,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 588,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 574,
											"end": 588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 555,
											"end": 588,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 555,
											"end": 588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 612,
											"end": 618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 603,
											"end": 629,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "3BF919A220A0F12DDCAF77FD06FFA4B9C728617774936F0D78B452010319C824"
										},
										{
											"begin": 620,
											"end": 628,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 603,
											"end": 629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 603,
											"end": 629,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 603,
											"end": 629,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 603,
											"end": 629,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 603,
											"end": 629,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 603,
											"end": 629,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 647,
											"end": 655,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 487,
											"end": 662,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 487,
											"end": 662,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1404,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1297,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1297,
											"end": 1310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2372,
											"end": 2394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2364,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2466,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2447,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2284,
											"end": 2482,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 771,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 668,
											"end": 771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 718,
											"end": 725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 757,
											"end": 763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 744,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 744,
											"end": 764,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 764,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 744,
											"end": 764,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 737,
											"end": 764,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 668,
											"end": 771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 668,
											"end": 771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1562,
											"end": 1692,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1562,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1636,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1625,
											"end": 1630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1625,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1625,
											"end": 1648,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1617,
											"end": 1685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2636,
											"end": 2823,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2636,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2761,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2776,
											"end": 2816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2709,
											"end": 2725,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2776,
											"end": 2816,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2636,
											"end": 2823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2636,
											"end": 2823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2636,
											"end": 2823,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 973,
											"end": 1531,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 973,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1046,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1145,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1135,
											"end": 1146,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D602D80600A3D3981F3363D3D373D3D3D363D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1278,
											"end": 1282,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1274,
											"end": 1299,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1267,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1262,
											"end": 1265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5AF43D82803E903D91602B57FD5BF3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1329,
											"end": 1333,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1324,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1447,
											"name": "PUSH",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1448,
											"name": "CREATE",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1497,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1467,
											"end": 1524,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 158,
											"end": 254,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 158,
											"end": 254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 237,
											"end": 247,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 158,
											"end": 254,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 158,
											"end": 254,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 152,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 14,
											"end": 152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 84,
											"end": 104,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 113,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 84,
											"end": 104,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 113,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 113,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 157,
											"end": 933,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 157,
											"end": 933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 260,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 248,
											"end": 265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 244,
											"end": 271,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 234,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 294,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 282,
											"end": 287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 275,
											"end": 295,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 234,
											"end": 236,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 234,
											"end": 236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 316,
											"end": 336,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 355,
											"end": 359,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 394,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 437,
											"end": 439,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 394,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 394,
											"end": 440,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 394,
											"end": 440,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 394,
											"end": 440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 379,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 379,
											"end": 441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 475,
											"end": 490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 475,
											"end": 490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 475,
											"end": 490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 506,
											"end": 518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 506,
											"end": 518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 506,
											"end": 518,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 506,
											"end": 518,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 538,
											"end": 553,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 538,
											"end": 553,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 538,
											"end": 553,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 584,
											"end": 595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 584,
											"end": 595,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 584,
											"end": 595,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 572,
											"end": 596,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 572,
											"end": 596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 568,
											"end": 601,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 565,
											"end": 607,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 562,
											"end": 564,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 562,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 562,
											"end": 564,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 624,
											"end": 629,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 610,
											"end": 630,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 562,
											"end": 564,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 562,
											"end": 564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 664,
											"end": 904,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 664,
											"end": 904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 678,
											"end": 680,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 675,
											"end": 676,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 672,
											"end": 681,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 904,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 664,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 664,
											"end": 904,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 749,
											"end": 752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 736,
											"end": 753,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 766,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 766,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 766,
											"end": 799,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 799,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 766,
											"end": 799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 812,
											"end": 830,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 812,
											"end": 830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 850,
											"end": 862,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 850,
											"end": 862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 882,
											"end": 894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 882,
											"end": 894,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 882,
											"end": 894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 882,
											"end": 894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 689,
											"end": 698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 664,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 664,
											"end": 904,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 664,
											"end": 904,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 664,
											"end": 904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 922,
											"end": 927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 922,
											"end": 927,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 224,
											"end": 933,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 224,
											"end": 933,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 938,
											"end": 1745,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 938,
											"end": 1745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 938,
											"end": 1745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1046,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1071,
											"end": 1076,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1069,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1077,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1118,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1137,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1176,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1176,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1176,
											"end": 1222,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1161,
											"end": 1223,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1161,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1272,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1300,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1288,
											"end": 1300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1335,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1335,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1377,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1377,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1377,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1383,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1389,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1411,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1404,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1412,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1437,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1463,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1535,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1583,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1568,
											"end": 1584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1585,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1608,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1601,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1589,
											"end": 1609,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 1706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1479,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1446,
											"end": 1716,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 2302,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1750,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 2302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 1851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1833,
											"end": 1839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1825,
											"end": 1852,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1856,
											"end": 1876,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1815,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1954,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1929,
											"end": 1955,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1958,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2044,
											"end": 2046,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2025,
											"end": 2038,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2048,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2054,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2017,
											"end": 2055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2002,
											"end": 2056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2002,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2002,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2079,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2127,
											"end": 2130,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2120,
											"end": 2124,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2125,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2131,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2146,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2154,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2093,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2195,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2196,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2220,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2271,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2271,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2229,
											"end": 2271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 2302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1805,
											"end": 2302,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2566,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2307,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2394,
											"end": 2417,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2390,
											"end": 2422,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2447,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2387,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2494,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2530,
											"end": 2535,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2503,
											"end": 2536,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2536,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2503,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2555,
											"end": 2560,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2377,
											"end": 2566,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2377,
											"end": 2566,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 4001,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2889,
											"end": 2898,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2899,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2930,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2951,
											"end": 2982,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2951,
											"end": 2982,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2951,
											"end": 2982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2982,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 2982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3033,
											"end": 3035,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3031,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3018,
											"end": 3036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3005,
											"end": 3037,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3074,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3103,
											"end": 3125,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3191,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 3178,
											"end": 3200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3146,
											"end": 3210,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3210,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3146,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3261,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3235,
											"end": 3267,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3219,
											"end": 3267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3295,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3320,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3276,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3397,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3387,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3398,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3341,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3408,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3461,
											"end": 3463,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3433,
											"end": 3465,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3417,
											"end": 3465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3490,
											"end": 3492,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3493,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3476,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3474,
											"end": 3476,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3509,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3476,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3474,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3574,
											"end": 3582,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3563,
											"end": 3572,
											"name": "DUP15",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3539,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3539,
											"end": 3593,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3539,
											"end": 3593,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3539,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3593,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3646,
											"end": 3649,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3635,
											"end": 3644,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3651,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3651,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3678,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3666,
											"end": 3674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3679,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3703,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3682,
											"end": 3704,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3771,
											"end": 3778,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3760,
											"end": 3768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3725,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3779,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3715,
											"end": 3779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3826,
											"end": 3829,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3811,
											"end": 3830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3831,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3831,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3881,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3863,
											"end": 3882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3850,
											"end": 3883,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3883,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3840,
											"end": 3883,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3933,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3935,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3892,
											"end": 3935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3990,
											"end": 3993,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3979,
											"end": 3988,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3975,
											"end": 3994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 3954,
											"end": 3995,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3954,
											"end": 3995,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3954,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3995,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 4001,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4006,
											"end": 4112,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 4006,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4074,
											"end": 4105,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4062,
											"end": 4106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4062,
											"end": 4106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4052,
											"end": 4112,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4117,
											"end": 4583,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4117,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4117,
											"end": 4583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4205,
											"end": 4217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4233,
											"end": 4236,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4264,
											"end": 4268,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4291,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4330,
											"end": 4332,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4323,
											"end": 4328,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4319,
											"end": 4333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4351,
											"end": 4354,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4374,
											"end": 4375,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4384,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4455,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4455,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4438,
											"end": 4477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4426,
											"end": 4478,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4426,
											"end": 4478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4498,
											"end": 4510,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4548,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4533,
											"end": 4548,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4474,
											"end": 4475,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4363,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4574,
											"end": 4577,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4574,
											"end": 4577,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 4181,
											"end": 4583,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4181,
											"end": 4583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4588,
											"end": 5066,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4588,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4588,
											"end": 5066,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4692,
											"end": 4695,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4722,
											"end": 4725,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4754,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4746,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4755,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4810,
											"end": 4814,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4862,
											"end": 4884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4885,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4763,
											"end": 4775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4734,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4911,
											"end": 4912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4908,
											"end": 4921,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4977,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4962,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4955,
											"end": 4971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4905,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5027,
											"end": 5042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5014,
											"end": 5053,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5014,
											"end": 5053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5014,
											"end": 5053,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5014,
											"end": 5053,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5055,
											"end": 5059,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5060,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4640,
											"end": 5066,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4640,
											"end": 5066,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5071,
											"end": 5274,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 5071,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5235,
											"end": 5267,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5268,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5205,
											"end": 5207,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5190,
											"end": 5208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5274,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5279,
											"end": 5654,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5279,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5500,
											"end": 5532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5532,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5533,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5482,
											"end": 5533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5569,
											"end": 5571,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5572,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5279,
											"end": 5654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5621,
											"end": 5627,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5589,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5581,
											"end": 5648,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5654,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5654,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5659,
											"end": 7112,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 5659,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5659,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6156,
											"end": 6158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6154,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6138,
											"end": 6159,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6237,
											"end": 6239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6226,
											"end": 6235,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6182,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6168,
											"end": 6241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6168,
											"end": 6241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6260,
											"end": 6262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6310,
											"end": 6319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6302,
											"end": 6308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6298,
											"end": 6320,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6291,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6278,
											"end": 6296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6382,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 6370,
											"end": 6383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6407,
											"end": 6413,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6399,
											"end": 6405,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6392,
											"end": 6414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6442,
											"end": 6444,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6434,
											"end": 6440,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6445,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6423,
											"end": 6445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6423,
											"end": 6445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 6468,
											"end": 6483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6483,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6454,
											"end": 6483,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6505,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6535,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6593,
											"end": 6606,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6593,
											"end": 6606,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6608,
											"end": 6612,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6589,
											"end": 6613,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6577,
											"end": 6614,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6577,
											"end": 6614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6684,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6684,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6669,
											"end": 6684,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6646,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6646,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6551,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6543,
											"end": 6552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6514,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6734,
											"end": 6737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6725,
											"end": 6727,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6714,
											"end": 6723,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6703,
											"end": 6750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6801,
											"end": 6804,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6793,
											"end": 6799,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6773,
											"end": 6805,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6773,
											"end": 6805,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6773,
											"end": 6805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6805,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6805,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6845,
											"end": 6851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6841,
											"end": 6863,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6825,
											"end": 6834,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 6864,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6909,
											"end": 6915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6901,
											"end": 6907,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 6881,
											"end": 6916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6881,
											"end": 6916,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6881,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6953,
											"end": 6959,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6936,
											"end": 6945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6932,
											"end": 6951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6925,
											"end": 6960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6997,
											"end": 7003,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6991,
											"end": 6994,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6980,
											"end": 6989,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6976,
											"end": 6995,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6969,
											"end": 7004,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7041,
											"end": 7047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7038,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7024,
											"end": 7033,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7020,
											"end": 7039,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7048,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7057,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 7090,
											"end": 7099,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7057,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7057,
											"end": 7106,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7117,
											"end": 7519,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7117,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7321,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7301,
											"end": 7322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7301,
											"end": 7322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7360,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7331,
											"end": 7361,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7397,
											"end": 7431,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7392,
											"end": 7394,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7377,
											"end": 7395,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7370,
											"end": 7432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7448,
											"end": 7466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7441,
											"end": 7477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7512,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7494,
											"end": 7513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7291,
											"end": 7519,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7524,
											"end": 7870,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7524,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7726,
											"end": 7728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7708,
											"end": 7729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7765,
											"end": 7767,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7745,
											"end": 7763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7768,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "115490CC4C4D8DCE8818DC99585D194819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7799,
											"end": 7801,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7846,
											"end": 7864,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7846,
											"end": 7864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7698,
											"end": 7870,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7875,
											"end": 8231,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7875,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8077,
											"end": 8079,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8080,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8119,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8189,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8150,
											"end": 8152,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8222,
											"end": 8224,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8049,
											"end": 8231,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8236,
											"end": 8487,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8236,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8300,
											"end": 8309,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8383,
											"end": 8401,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8404,
											"end": 8426,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8365,
											"end": 8427,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8364,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8362,
											"end": 8364,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8466,
											"end": 8468,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8459,
											"end": 8481,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8280,
											"end": 8487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8280,
											"end": 8487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8280,
											"end": 8487,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8492,
											"end": 8681,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 8492,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8492,
											"end": 8681,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8606,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8580,
											"end": 8586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8607,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8576,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8574,
											"end": 8576,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8610,
											"end": 8628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8670,
											"end": 8674,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8651,
											"end": 8668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8651,
											"end": 8668,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8651,
											"end": 8668,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8647,
											"end": 8675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8647,
											"end": 8675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8564,
											"end": 8681,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8686,
											"end": 8813,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 8686,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8747,
											"end": 8757,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8742,
											"end": 8745,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8738,
											"end": 8758,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8735,
											"end": 8736,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8728,
											"end": 8759,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8778,
											"end": 8782,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8775,
											"end": 8776,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8768,
											"end": 8783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8802,
											"end": 8806,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8799,
											"end": 8800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8792,
											"end": 8807,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8818,
											"end": 8951,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 8818,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8895,
											"end": 8926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8895,
											"end": 8926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8885,
											"end": 8927,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8885,
											"end": 8927,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 8875,
											"end": 8877,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8938,
											"end": 8939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8931,
											"end": 8943,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"clone(address)": "8124b78e",
							"deploy(address,address[],uint8[],string,string,uint256,uint256,uint256,address)": "0e64a45e",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"name\":\"NewClone\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20[]\",\"name\":\"pooledTokens\",\"type\":\"address[]\"}],\"name\":\"NewSwapPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"clone\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"swapAddress\",\"type\":\"address\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_pooledTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"string\",\"name\":\"lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lpTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_adminFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpTokenTargetAddress\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapDeployer.sol\":\"SwapDeployer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x37c1b0a4a436e94fa52f40f9c9a6451ae76e7db73eed457dbaa3a7e75a634034\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62bdf7ee690f5ce25a0ede1579ff447c8060448020cc8a3f1cf4869c4d637117\",\"dweb:/ipfs/QmZ9Mxav2XWCUnc4vBwvhG4BBojSEbaMkkFLhJqBNKgVjd\"]},\"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0xae614c6b103b743c62e9544632f7ef4fc8950de4e9c783d2e765a3b86701dda3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1840012075b9b05caa02da1b16d2d2662b2c383feb3169c8159fd8deb4840f5c\",\"dweb:/ipfs/QmPj63a7JH3aAqVj1wvkuGEdth7s9f33vK26A5aE9k23S4\"]},\"src/SwapDeployer.sol\":{\"keccak256\":\"0xb7b083dfde292ca4a44212489de31062d4f53cc32590abdc547fa147dedea098\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://377d1d719ae781256269b0c7913beea075347101444b497ce95073db6e435bad\",\"dweb:/ipfs/QmexHFzLQJVCEp2VdVKNEcwvUvriLRHFrJN3csx9UTprtb\"]},\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x2c88d81d0bcedd3ab706d483909c689f29f635281bb6140657bfa816babc5d05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0aee4682d6461c056571894182ad4f10e39a8f7d7d2a747acf650711d4730658\",\"dweb:/ipfs/Qmaa1BHXoDGCLxMrKrpouqA47N7ECuhrgn7ZEWvCQiuD8u\"]},\"src/interfaces/ISwap.sol\":{\"keccak256\":\"0x444a5c06e44f90f3c0486ac16afc4d0727433b57778c189b3b99ef430083db14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33aa483050747a0ba93df84b5225d8b6438d2098acfb01b6a90b04b6810234d0\",\"dweb:/ipfs/QmTvxyy5cbgnmafhxQrHj1S4gs3SZCfkPn749618AVxubK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": "src/SwapDeployer.sol:SwapDeployer",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x2c88d81d0bcedd3ab706d483909c689f29f635281bb6140657bfa816babc5d05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0aee4682d6461c056571894182ad4f10e39a8f7d7d2a747acf650711d4730658\",\"dweb:/ipfs/Qmaa1BHXoDGCLxMrKrpouqA47N7ECuhrgn7ZEWvCQiuD8u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/interfaces/ISwap.sol": {
				"ISwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "minToMint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateRemoveLiquidity",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "tokenIndex",
									"type": "uint8"
								}
							],
							"name": "calculateRemoveLiquidityOneToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "availableTokenAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "tokenIndexFrom",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "tokenIndexTo",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "dx",
									"type": "uint256"
								}
							],
							"name": "calculateSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bool",
									"name": "deposit",
									"type": "bool"
								}
							],
							"name": "calculateTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLpToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNumberOfTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "index",
									"type": "uint8"
								}
							],
							"name": "getToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "index",
									"type": "uint8"
								}
							],
							"name": "getTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenBalances",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "getTokenIndex",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVirtualPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20[]",
									"name": "pooledTokens",
									"type": "address[]"
								},
								{
									"internalType": "uint8[]",
									"name": "decimals",
									"type": "uint8[]"
								},
								{
									"internalType": "string",
									"name": "lpTokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "lpTokenSymbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "a",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "adminFee",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "lpTokenTargetAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "minAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "maxBurnAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityImbalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "tokenIndex",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityOneToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "tokenIndexFrom",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "tokenIndexTo",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "dx",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minDy",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(uint256[],uint256,uint256)": "4d49e87d",
							"calculateRemoveLiquidity(uint256)": "f2fad2b6",
							"calculateRemoveLiquidityOneToken(uint256,uint8)": "342a87a1",
							"calculateSwap(uint8,uint8,uint256)": "a95b089f",
							"calculateTokenAmount(uint256[],bool)": "e6ab2806",
							"getA()": "d46300fd",
							"getLpToken()": "8214f5a4",
							"getNumberOfTokens()": "efeecb51",
							"getToken(uint8)": "82b86600",
							"getTokenBalance(uint8)": "91ceb3eb",
							"getTokenBalances()": "a1dc9031",
							"getTokenIndex(address)": "66c0bd24",
							"getVirtualPrice()": "e25aa5fa",
							"initialize(address[],uint8[],string,string,uint256,uint256,uint256,address)": "b28cb6dc",
							"removeLiquidity(uint256,uint256[],uint256)": "31cd52b0",
							"removeLiquidityImbalance(uint256[],uint256,uint256)": "84cdd9bc",
							"removeLiquidityOneToken(uint256,uint8,uint256,uint256)": "3e3a1560",
							"swap(uint8,uint8,uint256,uint256,uint256)": "91695586"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"minToMint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateRemoveLiquidity\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"tokenIndex\",\"type\":\"uint8\"}],\"name\":\"calculateRemoveLiquidityOneToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"availableTokenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenIndexFrom\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tokenIndexTo\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"}],\"name\":\"calculateSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"deposit\",\"type\":\"bool\"}],\"name\":\"calculateTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLpToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"getTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenBalances\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVirtualPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"pooledTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"decimals\",\"type\":\"uint8[]\"},{\"internalType\":\"string\",\"name\":\"lpTokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"lpTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"a\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adminFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpTokenTargetAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"minAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"maxBurnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityImbalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"tokenIndex\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityOneToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"tokenIndexFrom\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"tokenIndexTo\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"dx\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISwap.sol\":\"ISwap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/interfaces/IERC20.sol\":{\"keccak256\":\"0x2c88d81d0bcedd3ab706d483909c689f29f635281bb6140657bfa816babc5d05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0aee4682d6461c056571894182ad4f10e39a8f7d7d2a747acf650711d4730658\",\"dweb:/ipfs/Qmaa1BHXoDGCLxMrKrpouqA47N7ECuhrgn7ZEWvCQiuD8u\"]},\"src/interfaces/ISwap.sol\":{\"keccak256\":\"0x444a5c06e44f90f3c0486ac16afc4d0727433b57778c189b3b99ef430083db14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33aa483050747a0ba93df84b5225d8b6438d2098acfb01b6a90b04b6810234d0\",\"dweb:/ipfs/QmTvxyy5cbgnmafhxQrHj1S4gs3SZCfkPn749618AVxubK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> src/SwapDeployer.sol:17:5:\n   |\n17 |     constructor() public Ownable() {}\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 481,
					"file": "src/SwapDeployer.sol",
					"start": 448
				},
				"type": "Warning"
			}
		],
		"sources": {
			"src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							20
						],
						"Ownable": [
							130
						]
					},
					"id": 131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "220:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "237:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "237:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "230:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "211:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:0"
									},
									"scope": 20,
									"src": "158:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "327:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "344:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "344:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "337:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "311:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "311:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "310:16:0"
									},
									"scope": 20,
									"src": "260:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 131,
							"src": "126:235:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 22,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "886:7:0"
									},
									"id": 23,
									"nodeType": "InheritanceSpecifier",
									"src": "886:7:0"
								}
							],
							"contractDependencies": [
								20
							],
							"contractKind": "contract",
							"documentation": {
								"id": 21,
								"nodeType": "StructuredDocumentation",
								"src": "362:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 130,
							"linearizedBaseContracts": [
								130,
								20
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "900:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 24,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "900:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 31,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "956:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "987:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:57:0"
									},
									"src": "929:84:0"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "1129:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 36,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1158:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1158:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 35,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1139:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1139:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "1139:32:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1019:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 41,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1129:0:0"
									},
									"scope": 130,
									"src": "1115:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "1287:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 44,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1297:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1297:13:0"
											},
											{
												"id": 47,
												"nodeType": "PlaceholderStatement",
												"src": "1320:1:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1184:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 49,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1284:2:0"
									},
									"src": "1266:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1459:30:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "1476:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 54,
												"id": 56,
												"nodeType": "Return",
												"src": "1469:13:0"
											}
										]
									},
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1334:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1418:2:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1450:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:9:0"
									},
									"scope": 130,
									"src": "1404:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1607:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 63,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "1625:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1625:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1636:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1636:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1625:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1650:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1617:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1617:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1617:68:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1495:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:0:0"
									},
									"scope": 130,
									"src": "1562:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2088:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2125:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2117:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 79,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2117:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2117:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "2098:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2098:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "2098:30:0"
											}
										]
									},
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "1698:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 76,
											"modifierName": {
												"id": 75,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "2078:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2078:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2060:2:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:0:0"
									},
									"scope": 130,
									"src": "2034:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "2354:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 95,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2372:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 98,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2392:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2384:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 96,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2384:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2384:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2372:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2396:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2364:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2364:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2364:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 105,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2466:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 104,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "2447:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2447:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2447:28:0"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2141:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 92,
											"modifierName": {
												"id": 91,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 49,
												"src": "2344:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2344:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2311:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:18:0"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:0:0"
									},
									"scope": 130,
									"src": "2284:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "2699:124:0",
										"statements": [
											{
												"assignments": [
													116
												],
												"declarations": [
													{
														"constant": false,
														"id": 116,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "2709:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 115,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2709:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"id": 117,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2728:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2709:25:0"
											},
											{
												"expression": {
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 119,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2744:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 120,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2753:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2744:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "2744:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 124,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "2797:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 125,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2807:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 123,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2776:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2776:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "EmitStatement",
												"src": "2771:45:0"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2488:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "2664:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:18:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2699:0:0"
									},
									"scope": 130,
									"src": "2636:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 131,
							"src": "857:1968:0"
						}
					],
					"src": "102:2724:0"
				},
				"id": 0
			},
			"src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol": {
				"ast": {
					"absolutePath": "src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol",
					"exportedSymbols": {
						"Clones": [
							210
						]
					},
					"id": 211,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 132,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 133,
								"nodeType": "StructuredDocumentation",
								"src": "125:629:1",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"
							},
							"fullyImplemented": true,
							"id": 210,
							"linearizedBaseContracts": [
								210
							],
							"name": "Clones",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "1048:483:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1110:348:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1124:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1141:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1135:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "1128:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1166:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1171:66:1",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:79:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1262:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1267:4:1",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1258:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1278:4:1",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "implementation",
																				"nodeType": "YulIdentifier",
																				"src": "1284:14:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1274:25:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1324:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:4:1",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:66:1",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1313:90:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1313:90:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1416:32:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1438:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1443:4:1",
																		"type": "",
																		"value": "0x37"
																	}
																],
																"functionName": {
																	"name": "create",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:20:1"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "1416:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "1284:14:1",
														"valueSize": 1
													},
													{
														"declaration": 139,
														"isOffset": false,
														"isSlot": false,
														"src": "1416:8:1",
														"valueSize": 1
													}
												],
												"id": 141,
												"nodeType": "InlineAssembly",
												"src": "1101:357:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1475:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1495:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1487:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 144,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1487:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1487:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1475:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a20637265617465206661696c6564",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1499:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															},
															"value": "ERC1167: create failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335",
																"typeString": "literal_string \"ERC1167: create failed\""
															}
														],
														"id": 142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1467:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1467:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "1467:57:1"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "776:192:1",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "988:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:24:1"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "instance",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1030:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1030:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1029:18:1"
									},
									"scope": 210,
									"src": "973:558:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "2008:491:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2070:355:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2084:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2101:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2095:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "2088:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2126:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:66:1",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2119:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2119:79:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2222:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:4:1",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2238:4:1",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "implementation",
																				"nodeType": "YulIdentifier",
																				"src": "2244:14:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:25:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2211:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2211:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2284:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2289:4:1",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2280:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2296:66:1",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2273:90:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2273:90:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:39:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2396:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2399:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:4:1",
																		"type": "",
																		"value": "0x37"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "2410:4:1"
																	}
																],
																"functionName": {
																	"name": "create2",
																	"nodeType": "YulIdentifier",
																	"src": "2388:7:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2388:27:1"
															},
															"variableNames": [
																{
																	"name": "instance",
																	"nodeType": "YulIdentifier",
																	"src": "2376:8:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 156,
														"isOffset": false,
														"isSlot": false,
														"src": "2244:14:1",
														"valueSize": 1
													},
													{
														"declaration": 161,
														"isOffset": false,
														"isSlot": false,
														"src": "2376:8:1",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "2410:4:1",
														"valueSize": 1
													}
												],
												"id": 163,
												"nodeType": "InlineAssembly",
												"src": "2061:364:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 165,
																"name": "instance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "2442:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2462:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2454:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 166,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2454:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2454:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2442:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313136373a2063726561746532206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2466:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															},
															"value": "ERC1167: create2 failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73",
																"typeString": "literal_string \"ERC1167: create2 failed\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2434:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2434:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 173,
												"nodeType": "ExpressionStatement",
												"src": "2434:58:1"
											}
										]
									},
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "1537:364:1",
										"text": " @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cloneDeterministic",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1934:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "salt",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1958:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1933:38:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "instance",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "1990:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:18:1"
									},
									"scope": 210,
									"src": "1906:593:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2774:582:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2836:514:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2850:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2867:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2861:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2861:11:1"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "2854:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2892:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2897:66:1",
																		"type": "",
																		"value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2885:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2885:79:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "2988:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2993:4:1",
																				"type": "",
																				"value": "0x14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:4:1",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "implementation",
																				"nodeType": "YulIdentifier",
																				"src": "3010:14:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3000:25:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2977:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2977:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3055:4:1",
																				"type": "",
																				"value": "0x28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3046:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3062:66:1",
																		"type": "",
																		"value": "0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3039:90:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3039:90:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3153:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3158:4:1",
																				"type": "",
																				"value": "0x38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3169:4:1",
																				"type": "",
																				"value": "0x60"
																			},
																			{
																				"name": "deployer",
																				"nodeType": "YulIdentifier",
																				"src": "3175:8:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3165:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3165:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3142:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3142:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3209:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3214:4:1",
																				"type": "",
																				"value": "0x4c"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:14:1"
																	},
																	{
																		"name": "salt",
																		"nodeType": "YulIdentifier",
																		"src": "3221:4:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3198:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3198:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3250:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3255:4:1",
																				"type": "",
																				"value": "0x6c"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3246:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3272:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3277:4:1",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3262:9:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3262:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3239:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3239:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3296:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3323:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3328:4:1",
																				"type": "",
																				"value": "0x37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3319:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3335:4:1",
																		"type": "",
																		"value": "0x55"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "3309:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3309:31:1"
															},
															"variableNames": [
																{
																	"name": "predicted",
																	"nodeType": "YulIdentifier",
																	"src": "3296:9:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 182,
														"isOffset": false,
														"isSlot": false,
														"src": "3175:8:1",
														"valueSize": 1
													},
													{
														"declaration": 178,
														"isOffset": false,
														"isSlot": false,
														"src": "3010:14:1",
														"valueSize": 1
													},
													{
														"declaration": 185,
														"isOffset": false,
														"isSlot": false,
														"src": "3296:9:1",
														"valueSize": 1
													},
													{
														"declaration": 180,
														"isOffset": false,
														"isSlot": false,
														"src": "3221:4:1",
														"valueSize": 1
													}
												],
												"id": 187,
												"nodeType": "InlineAssembly",
												"src": "2827:523:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "2505:99:1",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2655:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "salt",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2687:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "deployer",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2709:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "predicted",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2755:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2755:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:19:1"
									},
									"scope": 210,
									"src": "2609:747:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3611:88:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3656:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "salt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "3672:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 204,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3686:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Clones_$210",
																		"typeString": "library Clones"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Clones_$210",
																		"typeString": "library Clones"
																	}
																],
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3678:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 202,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3678:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3678:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 199,
														"name": "predictDeterministicAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															189,
															209
														],
														"referencedDeclaration": 189,
														"src": "3628:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,bytes32,address) pure returns (address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3628:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 198,
												"id": 207,
												"nodeType": "Return",
												"src": "3621:71:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3362:99:1",
										"text": " @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "predictDeterministicAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3503:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "salt",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3527:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:38:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "predicted",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3588:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3587:19:1"
									},
									"scope": 210,
									"src": "3466:233:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 211,
							"src": "755:2946:1"
						}
					],
					"src": "100:3602:1"
				},
				"id": 1
			},
			"src/SwapDeployer.sol": {
				"ast": {
					"absolutePath": "src/SwapDeployer.sol",
					"exportedSymbols": {
						"Clones": [
							210
						],
						"Context": [
							20
						],
						"IERC20": [
							416
						],
						"ISwap": [
							594
						],
						"Ownable": [
							130
						],
						"SwapDeployer": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 212,
							"literals": [
								"solidity",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:22:2"
						},
						{
							"absolutePath": "src/.deps/npm/@openzeppelin/contracts/access/Ownable.sol",
							"file": "./.deps/npm/@openzeppelin/contracts/access/Ownable.sol",
							"id": 213,
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 131,
							"src": "57:64:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/.deps/npm/@openzeppelin/contracts/proxy/Clones.sol",
							"file": "./.deps/npm/@openzeppelin/contracts/proxy/Clones.sol",
							"id": 214,
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 211,
							"src": "122:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/interfaces/ISwap.sol",
							"file": "./interfaces/ISwap.sol",
							"id": 215,
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 595,
							"src": "185:32:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 216,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 130,
										"src": "244:7:2"
									},
									"id": 217,
									"nodeType": "InheritanceSpecifier",
									"src": "244:7:2"
								}
							],
							"contractDependencies": [
								20,
								130
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 338,
							"linearizedBaseContracts": [
								338,
								130,
								20
							],
							"name": "SwapDeployer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 227,
									"name": "NewSwapPool",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "deployer",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "285:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": false,
												"mutability": "mutable",
												"name": "swapAddress",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "319:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"indexed": false,
												"mutability": "mutable",
												"name": "pooledTokens",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "348:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 223,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 222,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 416,
															"src": "348:6:2"
														},
														"referencedDeclaration": 416,
														"src": "348:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$416",
															"typeString": "contract IERC20"
														}
													},
													"id": 224,
													"nodeType": "ArrayTypeName",
													"src": "348:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:100:2"
									},
									"src": "258:118:2"
								},
								{
									"anonymous": false,
									"id": 233,
									"name": "NewClone",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "396:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"mutability": "mutable",
												"name": "cloneAddress",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "420:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:46:2"
									},
									"src": "381:61:2"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "479:2:2",
										"statements": []
									},
									"id": 239,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [],
											"id": 236,
											"modifierName": {
												"id": 235,
												"name": "Ownable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 130,
												"src": "469:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "469:9:2"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:0:2"
									},
									"scope": 338,
									"src": "448:33:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "545:117:2",
										"statements": [
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "newClone",
														"nodeType": "VariableDeclaration",
														"scope": 259,
														"src": "555:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 246,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "555:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "581:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 248,
														"name": "_clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "574:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "574:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:33:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "612:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "newClone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "620:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 252,
														"name": "NewClone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "603:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "EmitStatement",
												"src": "598:31:2"
											},
											{
												"expression": {
													"id": 257,
													"name": "newClone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 247,
													"src": "647:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 245,
												"id": 258,
												"nodeType": "Return",
												"src": "640:15:2"
											}
										]
									},
									"functionSelector": "8124b78e",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "clone",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "502:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:16:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "536:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:9:2"
									},
									"scope": 338,
									"src": "487:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "727:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 269,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "757:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 267,
															"name": "Clones",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "744:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Clones_$210_$",
																"typeString": "type(library Clones)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "clone",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "744:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 266,
												"id": 271,
												"nodeType": "Return",
												"src": "737:27:2"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_clone",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "684:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:16:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "718:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "717:9:2"
									},
									"scope": 338,
									"src": "668:103:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "1106:440:2",
										"statements": [
											{
												"assignments": [
													300
												],
												"declarations": [
													{
														"constant": false,
														"id": 300,
														"mutability": "mutable",
														"name": "swapClone",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "1116:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 299,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1116:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 304,
												"initialValue": {
													"arguments": [
														{
															"id": 302,
															"name": "swapAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "1143:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 301,
														"name": "_clone",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "1136:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
															"typeString": "function (address) returns (address)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1136:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1116:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 309,
															"name": "_pooledTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "1206:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
																"typeString": "contract IERC20[] memory"
															}
														},
														{
															"id": 310,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1233:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															}
														},
														{
															"id": 311,
															"name": "lpTokenName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "1255:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 312,
															"name": "lpTokenSymbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "1280:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 313,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "1307:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 314,
															"name": "_fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "1323:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 315,
															"name": "_adminFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "1341:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 316,
															"name": "lpTokenTargetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "1364:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
																"typeString": "contract IERC20[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 306,
																	"name": "swapClone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "1171:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 305,
																"name": "ISwap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "1165:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ISwap_$594_$",
																	"typeString": "type(contract ISwap)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1165:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwap_$594",
																"typeString": "contract ISwap"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "initialize",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 528,
														"src": "1165:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (contract IERC20[] memory,uint8[] memory,string memory,string memory,uint256,uint256,uint256,address) external"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1165:229:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "1165:229:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 323,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1441:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1441:7:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 320,
																	"name": "swapClone",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "1412:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 319,
																"name": "Ownable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1404:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ownable_$130_$",
																	"typeString": "type(contract Ownable)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1404:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Ownable_$130",
																"typeString": "contract Ownable"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 109,
														"src": "1404:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1404:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1404:45:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 328,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1476:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1476:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "swapClone",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "1488:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "_pooledTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "1499:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
																"typeString": "contract IERC20[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
																"typeString": "contract IERC20[] memory"
															}
														],
														"id": 327,
														"name": "NewSwapPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1464:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,contract IERC20[] memory)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1464:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "EmitStatement",
												"src": "1459:54:2"
											},
											{
												"expression": {
													"id": 334,
													"name": "swapClone",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 300,
													"src": "1530:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 298,
												"id": 335,
												"nodeType": "Return",
												"src": "1523:16:2"
											}
										]
									},
									"functionSelector": "0e64a45e",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deploy",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "swapAddress",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "802:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "_pooledTokens",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "831:29:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 277,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 276,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 416,
															"src": "831:6:2"
														},
														"referencedDeclaration": 416,
														"src": "831:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$416",
															"typeString": "contract IERC20"
														}
													},
													"id": 278,
													"nodeType": "ArrayTypeName",
													"src": "831:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "870:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 280,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "870:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 281,
													"nodeType": "ArrayTypeName",
													"src": "870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "lpTokenName",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "903:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "903:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "lpTokenSymbol",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "938:27:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "938:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "_a",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "975:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "_fee",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "995:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "_adminFee",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1017:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "lpTokenTargetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1044:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:286:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:9:2"
									},
									"scope": 338,
									"src": "777:769:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "219:1329:2"
						}
					],
					"src": "33:1515:2"
				},
				"id": 2
			},
			"src/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "src/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							416
						]
					},
					"id": 417,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 416,
							"linearizedBaseContracts": [
								416
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:3"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "277:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "276:9:3"
									},
									"scope": 416,
									"src": "231:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "388:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:17:3"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "428:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "427:9:3"
									},
									"scope": 416,
									"src": "369:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "675:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "674:35:3"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "727:6:3"
									},
									"scope": 416,
									"src": "657:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:32:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:9:3"
									},
									"scope": 416,
									"src": "1009:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 385,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1762:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1779:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:33:3"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "1813:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 382,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:6:3"
									},
									"scope": 416,
									"src": "1745:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2148:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2164:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2183:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:51:3"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "2217:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2216:6:3"
									},
									"scope": 416,
									"src": "2126:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 406,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2407:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2429:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "2449:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:57:3"
									},
									"src": "2392:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 415,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2638:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2661:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:63:3"
									},
									"src": "2623:78:3"
								}
							],
							"scope": 417,
							"src": "137:2566:3"
						}
					],
					"src": "33:2670:3"
				},
				"id": 3
			},
			"src/interfaces/ISwap.sol": {
				"ast": {
					"absolutePath": "src/interfaces/ISwap.sol",
					"exportedSymbols": {
						"IERC20": [
							416
						],
						"ISwap": [
							594
						]
					},
					"id": 595,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 418,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:32:4"
						},
						{
							"absolutePath": "src/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 419,
							"nodeType": "ImportDirective",
							"scope": 595,
							"sourceUnit": 417,
							"src": "67:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 594,
							"linearizedBaseContracts": [
								594
							],
							"name": "ISwap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d46300fd",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getA",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:2:4"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "184:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "184:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:9:4"
									},
									"scope": 594,
									"src": "145:48:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "82b86600",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "217:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 425,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "217:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "216:13:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "253:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$416",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 428,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 416,
														"src": "253:6:4"
													},
													"referencedDeclaration": 416,
													"src": "253:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$416",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "252:8:4"
									},
									"scope": 594,
									"src": "199:62:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66c0bd24",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "290:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:22:4"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "335:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 436,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "335:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:7:4"
									},
									"scope": 594,
									"src": "267:75:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1dc9031",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:4"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "399:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "399:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 442,
													"nodeType": "ArrayTypeName",
													"src": "399:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:18:4"
									},
									"scope": 594,
									"src": "348:69:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "91ceb3eb",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "448:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 446,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "448:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "447:13:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "484:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:9:4"
									},
									"scope": 594,
									"src": "423:70:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e25aa5fa",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVirtualPrice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:2:4"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "549:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:9:4"
									},
									"scope": 594,
									"src": "499:59:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "efeecb51",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNumberOfTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:2:4"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "616:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:9:4"
									},
									"scope": 594,
									"src": "564:61:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8214f5a4",
									"id": 468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getLpToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "650:2:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "676:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$416",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 465,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 464,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 416,
														"src": "676:6:4"
													},
													"referencedDeclaration": 416,
													"src": "676:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$416",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:8:4"
									},
									"scope": 594,
									"src": "631:53:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a95b089f",
									"id": 479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateSwap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "tokenIndexFrom",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "762:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 469,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "tokenIndexTo",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "792:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 471,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "dx",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "820:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:84:4"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "860:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:9:4"
									},
									"scope": 594,
									"src": "730:139:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6ab2806",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTokenAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "905:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 480,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "905:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 481,
													"nodeType": "ArrayTypeName",
													"src": "905:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "deposit",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "933:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 483,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "933:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "904:42:4"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "994:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:9:4"
									},
									"scope": 594,
									"src": "875:128:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2fad2b6",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRemoveLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "1043:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:16:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "1106:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1106:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 494,
													"nodeType": "ArrayTypeName",
													"src": "1106:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:18:4"
									},
									"scope": 594,
									"src": "1009:115:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "342a87a1",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRemoveLiquidityOneToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1181:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "tokenIndex",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1210:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 500,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1210:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:61:4"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "availableTokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "1256:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1255:30:4"
									},
									"scope": 594,
									"src": "1130:156:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b28cb6dc",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "pooledTokens",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1354:28:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_memory_ptr",
													"typeString": "contract IERC20[]"
												},
												"typeName": {
													"baseType": {
														"id": 508,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 507,
															"name": "IERC20",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 416,
															"src": "1354:6:4"
														},
														"referencedDeclaration": 416,
														"src": "1354:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$416",
															"typeString": "contract IERC20"
														}
													},
													"id": 509,
													"nodeType": "ArrayTypeName",
													"src": "1354:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_contract$_IERC20_$416_$dyn_storage_ptr",
														"typeString": "contract IERC20[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1392:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 511,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "1392:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 512,
													"nodeType": "ArrayTypeName",
													"src": "1392:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "lpTokenName",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1425:25:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 514,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1425:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "lpTokenSymbol",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1460:27:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1460:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1497:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1516:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "adminFee",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1537:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "lpTokenTargetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1563:28:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1344:253:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1606:0:4"
									},
									"scope": 594,
									"src": "1325:282:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "91695586",
									"id": 543,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenIndexFrom",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1636:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 529,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1636:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenIndexTo",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1666:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 531,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "dx",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1694:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "minDy",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1714:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1737:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1626:133:4"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "1778:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1777:9:4"
									},
									"scope": 594,
									"src": "1613:174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4d49e87d",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1824:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 544,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1824:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 545,
													"nodeType": "ArrayTypeName",
													"src": "1824:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "minToMint",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1860:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1887:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:95:4"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1928:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:9:4"
									},
									"scope": 594,
									"src": "1793:144:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31cd52b0",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1977:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "minAmounts",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2001:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 558,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2001:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 559,
													"nodeType": "ArrayTypeName",
													"src": "2001:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2040:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2040:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:95:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "2081:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 564,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2081:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 565,
													"nodeType": "ArrayTypeName",
													"src": "2081:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:18:4"
									},
									"scope": 594,
									"src": "1943:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3e3a1560",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityOneToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2147:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "tokenIndex",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2176:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 571,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2176:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "minAmount",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2202:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2229:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:114:4"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2270:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:9:4"
									},
									"scope": 594,
									"src": "2105:174:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "84cdd9bc",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityImbalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2328:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 582,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2328:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 583,
													"nodeType": "ArrayTypeName",
													"src": "2328:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "maxBurnAmount",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2364:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2395:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:99:4"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2436:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2436:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2435:9:4"
									},
									"scope": 594,
									"src": "2285:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 595,
							"src": "91:2356:4"
						}
					],
					"src": "32:2415:4"
				},
				"id": 4
			}
		}
	}
}